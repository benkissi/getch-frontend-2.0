{"ast":null,"code":"import axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport const fbAuthentication = async (token, id, fbId) => {\n  const url = endpoints.FB_AUTH;\n  const params = {\n    token,\n    id,\n    fbId\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const searchInterest = async (token, keyword, limit = 500) => {\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    q: keyword,\n    type: 'adinterest',\n    access_token: token,\n    limit\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n  let interestSuggestions = [];\n  let response;\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    interest_list: keywords,\n    type: 'adinterestsuggestion',\n    access_token: token,\n    limit: limit\n  };\n  response = await axios.get(url, {\n    params\n  });\n  interestSuggestions.push(...response.data.data);\n  let page = 0;\n\n  while (response.data.paging.next) {\n    if (page > 5) {\n      break;\n    }\n\n    response = await axios.get(response.data.paging.next);\n    interestSuggestions.push(...response.data.data);\n    page++;\n  }\n\n  return interestSuggestions;\n};\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n  if (keywords.length > 200) {\n    let suggestions = [];\n    const dataArray = splitArray(keywords, 200);\n\n    for (let i = 0; i < dataArray.length; i++) {\n      suggestions.push(...(await getInterestSuggestions(token, dataArray[i], limit)));\n    }\n\n    return suggestions;\n  }\n\n  return await getInterestSuggestions(token, keywords, limit);\n};\nexport const getProducts = async shopName => {\n  const url = endpoints.GET_PRODUCTS(shopName);\n  const params = {\n    limit: 10\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  console.log(res.data);\n};\nexport const getAdAccounts = async (fbId, token) => {\n  const url = endpoints.GET_ADACCOUNTS(fbId);\n  const headers = {\n    'Authorization': token\n  };\n  const params = {\n    fbId\n  };\n  const res = await axios.get(url, {\n    headers,\n    params\n  });\n  return res.data;\n};\nexport const fbPaginate = async page => {\n  const res = await axios.get(page);\n  return res.data;\n};\nexport const getCampaigns = async (accountId, token) => {\n  const url = endpoints.GET_CAMPAIGNS(accountId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport var getAdsets = async (camaignId, token) => {\n  const url = endpoints.GET_ADSETS(camaignId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  console.log('adsets', res); // return res.data\n};","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/api/api.js"],"names":["axios","endpoints","splitArray","fbAuthentication","token","id","fbId","url","FB_AUTH","params","res","get","data","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","response","interest_list","push","page","paging","next","compileInterestSuggestions","length","suggestions","dataArray","i","getProducts","shopName","GET_PRODUCTS","console","log","getAdAccounts","GET_ADACCOUNTS","headers","fbPaginate","getCampaigns","accountId","GET_CAMPAIGNS","getAdsets","camaignId","GET_ADSETS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const fbAuthentication = async (token, id, fbId) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id, \n        fbId\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 500) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    let interestSuggestions = []\n    let response\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    response = await axios.get(url, {\n        params\n    })\n    interestSuggestions.push(...response.data.data)\n    let page = 0;\n    while(response.data.paging.next){\n        if(page > 5){\n            break\n        }\n        response = await axios.get(response.data.paging.next);\n        interestSuggestions.push(...response.data.data);\n        page++\n    }\n    return interestSuggestions\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    \n    if(keywords.length > 200){\n        let suggestions = []\n        const dataArray = splitArray(keywords, 200)\n        for(let i=0; i< dataArray.length; i++){\n            suggestions.push(...await getInterestSuggestions(token, dataArray[i], limit))\n        }\n        return suggestions\n    }\n\n    return await getInterestSuggestions(token, keywords, limit)\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}\n\nexport const getAdAccounts = async (fbId, token) => {\n    const url = endpoints.GET_ADACCOUNTS(fbId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const params = {\n        fbId\n    }\n\n    const res = await axios.get(url,{\n        headers,\n        params\n    })\n\n    return res.data\n}\n\nexport const fbPaginate = async (page) => {\n    const res =  await axios.get(page)\n    return res.data\n}\n\nexport const getCampaigns = async (accountId, token) => {\n    const url = endpoints.GET_CAMPAIGNS(accountId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport var getAdsets = async (camaignId, token) => {\n    const url = endpoints.GET_ADSETS(camaignId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    console.log('adsets',res)\n\n    // return res.data\n}"]},"metadata":{},"sourceType":"module"}