{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authFacebook } from \"../redux/user/user-actions\";\nimport SideBar from \"../components/sideBar\";\nimport Onboarding from \"../components/onboarding\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/scss/main.scss\";\nimport Header from \"./header\";\n\nconst DashboardLayout = props => {\n  const {\n    authFb,\n    user,\n    fbToken,\n    userError,\n    searchError\n  } = props;\n  const router = useRouter();\n  useEffect(() => {\n    if (searchError || userError) {\n      toast.error(`There was an error.`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n  }, [userError, searchError]);\n  useEffect(() => {\n    if (user == null) {\n      router.push(\"/signup\");\n    }\n  }, [props.user]);\n\n  const faceAuthStart = () => {\n    console.log(\"#### FB auth start\");\n  };\n\n  const responseFacebook = async res => {\n    const {\n      accessToken,\n      userID\n    } = res;\n    console.log('fb', res);\n    authFb(accessToken, user.id, userID);\n  };\n\n  const actions = [__jsx(_Button, {\n    style: {\n      background: \"#f86326\",\n      border: \"none\",\n      color: \"white\"\n    }\n  }, \"Get life time access\")];\n  return __jsx(\"div\", {\n    className: \"jsx-747387214\" + \" \" + \"layout\"\n  }, __jsx(ToastContainer, {\n    position: \"top-left\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnVisibilityChange: true,\n    draggable: true,\n    pauseOnHover: true\n  }), __jsx(_Row, null, __jsx(_Col, {\n    style: {\n      position: 'relative',\n      height: '100vh',\n      width: \"16.66666667%\"\n    },\n    span: 4\n  }, __jsx(SideBar, null)), __jsx(_Col, {\n    style: {\n      padding: '0 20px 0 20px',\n      minHeight: '100vh'\n    },\n    span: 20,\n    className: \"child-container\"\n  }, __jsx(\"div\", {\n    className: \"jsx-747387214\" + \" \" + \"header\"\n  }, __jsx(Header, {\n    actions: actions\n  })), __jsx(\"div\", {\n    className: \"jsx-747387214\" + \" \" + \"children\"\n  }, props.children), !fbToken && user ? __jsx(Onboarding, null) : \"\", __jsx(\"footer\", {\n    className: \"jsx-747387214\"\n  }, __jsx(\"div\", {\n    className: \"jsx-747387214\" + \" \" + \"footer\"\n  }, __jsx(\"p\", {\n    className: \"jsx-747387214\" + \" \" + \"footer-item\"\n  }, \"\\xA9 2010 - \", new Date().getFullYear(), \", Getch.\"))))), __jsx(_JSXStyle, {\n    id: \"747387214\"\n  }, [\".layout.jsx-747387214{position:relative;min-height:100vh;}\", \".layout-body.jsx-747387214{position:relative;}\", \".child-container.jsx-747387214{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\", \".children.jsx-747387214{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}\", \".header.jsx-747387214{position:fixed;top:0;width:81%;background-color:white;z-index:100;}\", \"footer.jsx-747387214{margin-top:100px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:100%;background:white;height:50px;margin-top:50px;}\", \".footer.jsx-747387214{position:fixed;bottom:0;width:inherit;background-color:white;color:black;text-align:center;}\"]));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.currentUser,\n  fbToken: state.user.fbToken,\n  userError: state.user.error,\n  searchError: state.search.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  authFb: (token, id, fbId) => dispatch(authFacebook({\n    token,\n    id,\n    fbId\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardLayout);","map":null,"metadata":{},"sourceType":"module"}