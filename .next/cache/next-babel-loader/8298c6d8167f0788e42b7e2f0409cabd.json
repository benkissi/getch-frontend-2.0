{"ast":null,"code":"import axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport const fbAuthentication = async (token, id) => {\n  const url = endpoints.FB_AUTH;\n  const params = {\n    token,\n    id\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const searchInterest = async (token, keyword, limit = 500) => {\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    q: keyword,\n    type: 'adinterest',\n    access_token: token,\n    limit\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n  let interestSuggestions = [];\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    interest_list: keywords,\n    type: 'adinterestsuggestion',\n    access_token: token,\n    limit: limit\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  console.log('******suggestions', res.data.paging.next);\n  return res.data.data;\n};\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n  if (keywords.length > 200) {\n    let suggestions = [];\n    const dataArray = splitArray(keywords, 200);\n\n    for (let i = 0; i < dataArray.length; i++) {\n      suggestions.push(...(await getInterestSuggestions(token, dataArray[i], limit)));\n    }\n\n    return suggestions;\n  }\n\n  return await getInterestSuggestions(token, keywords, limit);\n};\nexport const getProducts = async shopName => {\n  const url = endpoints.GET_PRODUCTS(shopName);\n  const params = {\n    limit: 10\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  console.log(res.data);\n};","map":{"version":3,"sources":["/code/ben/getch/frontend/api/api.js"],"names":["axios","endpoints","splitArray","fbAuthentication","token","id","url","FB_AUTH","params","res","get","data","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","interest_list","console","log","paging","next","compileInterestSuggestions","length","suggestions","dataArray","i","push","getProducts","shopName","GET_PRODUCTS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const fbAuthentication = async (token, id) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 500) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    let interestSuggestions = []\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    console.log('******suggestions' , res.data.paging.next)\n    return res.data.data\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    \n    if(keywords.length > 200){\n        let suggestions = []\n        const dataArray = splitArray(keywords, 200)\n        for(let i=0; i< dataArray.length; i++){\n            suggestions.push(...await getInterestSuggestions(token, dataArray[i], limit))\n        }\n        return suggestions\n    }\n\n    return await getInterestSuggestions(token, keywords, limit)\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}"]},"metadata":{},"sourceType":"module"}