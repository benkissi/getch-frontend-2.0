{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user-types\";\nimport { siginSuccess, setCurrentUser, addingCurrentUser, siginFailure, isLoading } from \"./user-actions\";\nexport function* setUser(user) {\n  try {\n    yield put(isLoading(true));\n\n    if (!user) {\n      throw new Error(\"No user\");\n    }\n\n    yield put(setCurrentUser(user));\n    yield put(siginSuccess(true));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(siginFailure(error));\n    yield put(isLoading(false));\n  }\n}\nexport function* signIn() {}\nexport function* onAddingCurrentUser() {\n  yield takeLatest(UserActionTypes.ADDING_CURRENT_USER, setUser);\n}\nexport function* onSigninStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signIn);\n}\nexport function* userSagas() {\n  yield all([call(onSigninStart)]);\n}","map":{"version":3,"sources":["/code/ben/getch/frontend/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","siginSuccess","setCurrentUser","addingCurrentUser","siginFailure","isLoading","setUser","user","Error","error","signIn","onAddingCurrentUser","ADDING_CURRENT_USER","onSigninStart","SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,SALF,QAMO,gBANP;AAQA,OAAO,UAAUC,OAAV,CAAkBC,IAAlB,EAAwB;AAC7B,MAAI;AACF,UAAMV,GAAG,CAACQ,SAAS,CAAC,IAAD,CAAV,CAAT;;AACA,QAAI,CAACE,IAAL,EAAW;AACT,YAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AACD;;AAED,UAAMX,GAAG,CAACK,cAAc,CAACK,IAAD,CAAf,CAAT;AACA,UAAMV,GAAG,CAACI,YAAY,CAAC,IAAD,CAAb,CAAT;AACA,UAAMJ,GAAG,CAACQ,SAAS,CAAC,KAAD,CAAV,CAAT;AACD,GATD,CASE,OAAOI,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACO,YAAY,CAACK,KAAD,CAAb,CAAT;AACA,UAAMZ,GAAG,CAACQ,SAAS,CAAC,KAAD,CAAV,CAAT;AACD;AACF;AAED,OAAO,UAAUK,MAAV,GAAmB,CAAE;AAE5B,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMf,UAAU,CAACI,eAAe,CAACY,mBAAjB,EAAsCN,OAAtC,CAAhB;AACD;AAED,OAAO,UAAUO,aAAV,GAA0B;AAC/B,QAAMjB,UAAU,CAACI,eAAe,CAACc,aAAjB,EAAgCJ,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACc,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user-types\";\nimport {\n  siginSuccess,\n  setCurrentUser,\n  addingCurrentUser,\n  siginFailure,\n  isLoading\n} from \"./user-actions\";\n\nexport function* setUser(user) {\n  try {\n    yield put(isLoading(true));\n    if (!user) {\n      throw new Error(\"No user\");\n    }\n\n    yield put(setCurrentUser(user));\n    yield put(siginSuccess(true));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(siginFailure(error));\n    yield put(isLoading(false));\n  }\n}\n\nexport function* signIn() {}\n\nexport function* onAddingCurrentUser() {\n  yield takeLatest(UserActionTypes.ADDING_CURRENT_USER, setUser);\n}\n\nexport function* onSigninStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signIn);\n}\n\nexport function* userSagas() {\n  yield all([call(onSigninStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}