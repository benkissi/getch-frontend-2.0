{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport var fbAuthentication = function fbAuthentication(token, id, fbId) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function fbAuthentication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = endpoints.FB_AUTH;\n          params = {\n            token: token,\n            id: id,\n            fbId: fbId\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var searchInterest = function searchInterest(token, keyword) {\n  var limit,\n      url,\n      params,\n      res,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function searchInterest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          limit = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 500;\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            q: keyword,\n            type: 'adinterest',\n            access_token: token,\n            limit: limit\n          };\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 5:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getInterestSuggestions = function getInterestSuggestions(token, keywords) {\n  var limit,\n      interestSuggestions,\n      response,\n      url,\n      params,\n      page,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function getInterestSuggestions$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          limit = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 100;\n          interestSuggestions = [];\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            interest_list: keywords,\n            type: 'adinterestsuggestion',\n            access_token: token,\n            limit: limit\n          };\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 6:\n          response = _context3.sent;\n          interestSuggestions.push.apply(interestSuggestions, _toConsumableArray(response.data.data));\n          page = 0;\n\n        case 9:\n          if (!response.data.paging.next) {\n            _context3.next = 19;\n            break;\n          }\n\n          if (!(page > 5)) {\n            _context3.next = 12;\n            break;\n          }\n\n          return _context3.abrupt(\"break\", 19);\n\n        case 12:\n          _context3.next = 14;\n          return _regeneratorRuntime.awrap(axios.get(response.data.paging.next));\n\n        case 14:\n          response = _context3.sent;\n          interestSuggestions.push.apply(interestSuggestions, _toConsumableArray(response.data.data));\n          page++;\n          _context3.next = 9;\n          break;\n\n        case 19:\n          return _context3.abrupt(\"return\", interestSuggestions);\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var compileInterestSuggestions = function compileInterestSuggestions(token, keywords) {\n  var limit,\n      suggestions,\n      dataArray,\n      i,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function compileInterestSuggestions$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          limit = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 100;\n\n          if (!(keywords.length > 200)) {\n            _context4.next = 18;\n            break;\n          }\n\n          suggestions = [];\n          dataArray = splitArray(keywords, 200);\n          i = 0;\n\n        case 5:\n          if (!(i < dataArray.length)) {\n            _context4.next = 17;\n            break;\n          }\n\n          _context4.t0 = suggestions.push;\n          _context4.t1 = suggestions;\n          _context4.t2 = _toConsumableArray;\n          _context4.next = 11;\n          return _regeneratorRuntime.awrap(getInterestSuggestions(token, dataArray[i], limit));\n\n        case 11:\n          _context4.t3 = _context4.sent;\n          _context4.t4 = (0, _context4.t2)(_context4.t3);\n\n          _context4.t0.apply.call(_context4.t0, _context4.t1, _context4.t4);\n\n        case 14:\n          i++;\n          _context4.next = 5;\n          break;\n\n        case 17:\n          return _context4.abrupt(\"return\", suggestions);\n\n        case 18:\n          _context4.next = 20;\n          return _regeneratorRuntime.awrap(getInterestSuggestions(token, keywords, limit));\n\n        case 20:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 21:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var getProducts = function getProducts(shopName) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function getProducts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = endpoints.GET_PRODUCTS(shopName);\n          params = {\n            limit: 10\n          };\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context5.sent;\n          console.log(res.data);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\nexport var getAdAccounts = function getAdAccounts(fbId, token) {\n  var url, headers, params, res;\n  return _regeneratorRuntime.async(function getAdAccounts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          url = endpoints.GET_ADACCOUNTS(fbId);\n          headers = {\n            'Authorization': token\n          };\n          params = {\n            fbId: fbId\n          };\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers,\n            params: params\n          }));\n\n        case 5:\n          res = _context6.sent;\n          return _context6.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\nexport var paginateAdAccounts = function paginateAdAccounts(page) {\n  var res;\n  return _regeneratorRuntime.async(function paginateAdAccounts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(page));\n\n        case 2:\n          res = _context7.sent;\n          return _context7.abrupt(\"return\", res.data);\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\nexport var getCampaigns = function getCampaigns(fbId, token) {\n  var url, headers, params, res;\n  return _regeneratorRuntime.async(function getCampaigns$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          url = endpoints.GET_ADACCOUNTS(fbId);\n          headers = {\n            'Authorization': token\n          };\n          params = {\n            fbId: fbId\n          };\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers,\n            params: params\n          }));\n\n        case 5:\n          res = _context8.sent;\n          return _context8.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/api/api.js"],"names":["axios","endpoints","splitArray","fbAuthentication","token","id","fbId","url","FB_AUTH","params","get","res","data","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","interest_list","response","push","page","paging","next","compileInterestSuggestions","length","suggestions","dataArray","i","getProducts","shopName","GET_PRODUCTS","console","log","getAdAccounts","GET_ADACCOUNTS","headers","paginateAdAccounts","getCampaigns"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const fbAuthentication = async (token, id, fbId) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id, \n        fbId\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 500) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    let interestSuggestions = []\n    let response\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    response = await axios.get(url, {\n        params\n    })\n    interestSuggestions.push(...response.data.data)\n    let page = 0;\n    while(response.data.paging.next){\n        if(page > 5){\n            break\n        }\n        response = await axios.get(response.data.paging.next);\n        interestSuggestions.push(...response.data.data);\n        page++\n    }\n    return interestSuggestions\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    \n    if(keywords.length > 200){\n        let suggestions = []\n        const dataArray = splitArray(keywords, 200)\n        for(let i=0; i< dataArray.length; i++){\n            suggestions.push(...await getInterestSuggestions(token, dataArray[i], limit))\n        }\n        return suggestions\n    }\n\n    return await getInterestSuggestions(token, keywords, limit)\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}\n\nexport const getAdAccounts = async (fbId, token) => {\n    const url = endpoints.GET_ADACCOUNTS(fbId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const params = {\n        fbId\n    }\n\n    const res = await axios.get(url,{\n        headers,\n        params\n    })\n\n    return res.data\n}\n\nexport const paginateAdAccounts = async (page) => {\n    const res =  await axios.get(page)\n    return res.data\n}\n\nexport const getCampaigns = async (fbId, token) => {\n    const url = endpoints.GET_ADACCOUNTS(fbId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const params = {\n        fbId\n    }\n\n    const res = await axios.get(url,{\n        headers,\n        params\n    })\n\n    return res.data\n}"]},"metadata":{},"sourceType":"module"}