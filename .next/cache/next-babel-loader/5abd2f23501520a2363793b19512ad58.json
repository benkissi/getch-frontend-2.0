{"ast":null,"code":"import SearchActionTypes from './search-types';\nexport var searchStart = function searchStart(searchParams) {\n  return {\n    type: SearchActionTypes.START_SEARCH,\n    payload: searchParams\n  };\n};\nexport var searchSuccess = function searchSuccess(data) {\n  return {\n    type: SearchActionTypes.SEARCH_SUCCESS,\n    payload: data\n  };\n};\nexport var searchFailure = function searchFailure(error) {\n  return {\n    type: SearchActionTypes.SEARCH_FAILURE,\n    payload: error\n  };\n};\nexport var setInterestCount = function setInterestCount(count) {\n  return {\n    type: SearchActionTypes.SET_INTEREST_COUNT,\n    payload: count\n  };\n};\nexport var isLoading = function isLoading(status) {\n  return {\n    type: SearchActionTypes.IS_LOADING,\n    payload: status\n  };\n};","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/redux/search/search-actions.js"],"names":["SearchActionTypes","searchStart","searchParams","type","START_SEARCH","payload","searchSuccess","data","SEARCH_SUCCESS","searchFailure","error","SEARCH_FAILURE","setInterestCount","count","SET_INTEREST_COUNT","isLoading","status","IS_LOADING"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,YAAY;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEH,iBAAiB,CAACI,YADgB;AAExCC,IAAAA,OAAO,EAAEH;AAF+B,GAAL;AAAA,CAAhC;AAKP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAK;AAClCJ,IAAAA,IAAI,EAAEH,iBAAiB,CAACQ,cADU;AAElCH,IAAAA,OAAO,EAAEE;AAFyB,GAAL;AAAA,CAA1B;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAK;AACnCP,IAAAA,IAAI,EAAEH,iBAAiB,CAACW,cADW;AAEnCN,IAAAA,OAAO,EAAEK;AAF0B,GAAL;AAAA,CAA3B;AAKP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;AAAA,SAAK;AACtCV,IAAAA,IAAI,EAAEH,iBAAiB,CAACc,kBADc;AAEtCT,IAAAA,OAAO,EAAEQ;AAF6B,GAAL;AAAA,CAA9B;AAKP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM;AAAA,SAAK;AAChCb,IAAAA,IAAI,EAAEH,iBAAiB,CAACiB,UADQ;AAEhCZ,IAAAA,OAAO,EAAEW;AAFuB,GAAL;AAAA,CAAxB","sourcesContent":["import SearchActionTypes from './search-types'\n\nexport const searchStart = searchParams => ({\n    type: SearchActionTypes.START_SEARCH,\n    payload: searchParams\n})\n\nexport const searchSuccess = data => ({\n    type: SearchActionTypes.SEARCH_SUCCESS,\n    payload: data\n})\n\nexport const searchFailure = error => ({\n    type: SearchActionTypes.SEARCH_FAILURE,\n    payload: error\n})\n\nexport const setInterestCount = count => ({\n    type: SearchActionTypes.SET_INTEREST_COUNT,\n    payload: count\n})\n\nexport const isLoading = status => ({\n    type: SearchActionTypes.IS_LOADING,\n    payload: status\n})"]},"metadata":{},"sourceType":"module"}