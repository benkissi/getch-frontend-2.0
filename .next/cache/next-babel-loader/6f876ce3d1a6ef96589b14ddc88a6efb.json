{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport var fbAuthentication = function fbAuthentication(token, id) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function fbAuthentication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = endpoints.FB_AUTH;\n          params = {\n            token: token,\n            id: id\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var searchInterest = function searchInterest(token, keyword) {\n  var limit,\n      url,\n      params,\n      res,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function searchInterest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          limit = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 500;\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            q: keyword,\n            type: 'adinterest',\n            access_token: token,\n            limit: limit\n          };\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 5:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getInterestSuggestions = function getInterestSuggestions(token, keywords) {\n  var limit,\n      interestSuggestions,\n      url,\n      params,\n      res,\n      page,\n      response,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function getInterestSuggestions$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          limit = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 100;\n          interestSuggestions = [];\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            interest_list: keywords,\n            type: 'adinterestsuggestion',\n            access_token: token,\n            limit: limit\n          };\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 6:\n          res = _context3.sent;\n          interestSuggestions.push(res.data.data);\n          page = 0;\n\n        case 9:\n          if (!res.data.paging.next) {\n            _context3.next = 19;\n            break;\n          }\n\n          if (!(page > 5)) {\n            _context3.next = 12;\n            break;\n          }\n\n          return _context3.abrupt(\"break\", 19);\n\n        case 12:\n          _context3.next = 14;\n          return _regeneratorRuntime.awrap(axios.get(interestSuggestions.data.paging.next));\n\n        case 14:\n          response = _context3.sent;\n          interestSuggestions.push.apply(interestSuggestions, _toConsumableArray(response.data.data));\n          page++;\n          _context3.next = 9;\n          break;\n\n        case 19:\n          console.log('******suggestions', interestSuggestions);\n          return _context3.abrupt(\"return\", interestSuggestions);\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var compileInterestSuggestions = function compileInterestSuggestions(token, keywords) {\n  var limit,\n      suggestions,\n      dataArray,\n      i,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function compileInterestSuggestions$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          limit = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 100;\n\n          if (!(keywords.length > 200)) {\n            _context4.next = 18;\n            break;\n          }\n\n          suggestions = [];\n          dataArray = splitArray(keywords, 200);\n          i = 0;\n\n        case 5:\n          if (!(i < dataArray.length)) {\n            _context4.next = 17;\n            break;\n          }\n\n          _context4.t0 = suggestions.push;\n          _context4.t1 = suggestions;\n          _context4.t2 = _toConsumableArray;\n          _context4.next = 11;\n          return _regeneratorRuntime.awrap(getInterestSuggestions(token, dataArray[i], limit));\n\n        case 11:\n          _context4.t3 = _context4.sent;\n          _context4.t4 = (0, _context4.t2)(_context4.t3);\n\n          _context4.t0.apply.call(_context4.t0, _context4.t1, _context4.t4);\n\n        case 14:\n          i++;\n          _context4.next = 5;\n          break;\n\n        case 17:\n          return _context4.abrupt(\"return\", suggestions);\n\n        case 18:\n          _context4.next = 20;\n          return _regeneratorRuntime.awrap(getInterestSuggestions(token, keywords, limit));\n\n        case 20:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 21:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var getProducts = function getProducts(shopName) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function getProducts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = endpoints.GET_PRODUCTS(shopName);\n          params = {\n            limit: 10\n          };\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context5.sent;\n          console.log(res.data);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/code/ben/getch/frontend/api/api.js"],"names":["axios","endpoints","splitArray","fbAuthentication","token","id","url","FB_AUTH","params","get","res","data","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","interest_list","push","page","paging","next","response","console","log","compileInterestSuggestions","length","suggestions","dataArray","i","getProducts","shopName","GET_PRODUCTS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const fbAuthentication = async (token, id) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 500) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    let interestSuggestions = []\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    interestSuggestions.push(res.data.data)\n    let page = 0;\n    while(res.data.paging.next){\n        if(page > 5){\n            break\n        }\n        const response = await axios.get(interestSuggestions.data.paging.next);\n        interestSuggestions.push(...response.data.data);\n        page++\n    }\n    console.log('******suggestions' , interestSuggestions)\n    return interestSuggestions\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    \n    if(keywords.length > 200){\n        let suggestions = []\n        const dataArray = splitArray(keywords, 200)\n        for(let i=0; i< dataArray.length; i++){\n            suggestions.push(...await getInterestSuggestions(token, dataArray[i], limit))\n        }\n        return suggestions\n    }\n\n    return await getInterestSuggestions(token, keywords, limit)\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}"]},"metadata":{},"sourceType":"module"}