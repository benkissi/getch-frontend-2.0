{"ast":null,"code":"import axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport const signUp = async (email, password) => {\n  const url = endpoint.SIGN_UP;\n  const data = {\n    email,\n    password\n  };\n  const res = await axios.post(url, data);\n};\nexport const fbAuthentication = async (token, id, fbId) => {\n  const url = endpoints.FB_AUTH;\n  const params = {\n    token,\n    id,\n    fbId\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const searchInterest = async (token, keyword, limit = 500) => {\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    q: keyword,\n    type: 'adinterest',\n    access_token: token,\n    limit\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n  let interestSuggestions = [];\n  let response;\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    interest_list: keywords,\n    type: 'adinterestsuggestion',\n    access_token: token,\n    limit: limit\n  };\n  response = await axios.get(url, {\n    params\n  });\n  interestSuggestions.push(...response.data.data);\n  let page = 0;\n\n  while (response.data.paging.next) {\n    if (page > 5) {\n      break;\n    }\n\n    response = await axios.get(response.data.paging.next);\n    interestSuggestions.push(...response.data.data);\n    page++;\n  }\n\n  return interestSuggestions;\n};\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n  if (keywords.length > 200) {\n    let suggestions = [];\n    const dataArray = splitArray(keywords, 200);\n\n    for (let i = 0; i < dataArray.length; i++) {\n      suggestions.push(...(await getInterestSuggestions(token, dataArray[i], limit)));\n    }\n\n    return suggestions;\n  }\n\n  return await getInterestSuggestions(token, keywords, limit);\n};\nexport const getProducts = async shopName => {\n  const url = endpoints.GET_PRODUCTS(shopName);\n  const params = {\n    limit: 10\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  console.log(res.data);\n};\nexport const getAdAccounts = async (fbId, token) => {\n  const url = endpoints.GET_ADACCOUNTS(fbId);\n  const headers = {\n    'Authorization': token\n  };\n  const params = {\n    fbId\n  };\n  const res = await axios.get(url, {\n    headers,\n    params\n  });\n  return res.data;\n};\nexport const fbPaginate = async page => {\n  const res = await axios.get(page);\n  return res.data;\n};\nexport const getCampaigns = async (accountId, token) => {\n  const url = endpoints.GET_CAMPAIGNS(accountId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getAdsets = async (camaignId, token) => {\n  const url = endpoints.GET_ADSETS(camaignId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getAds = async (adsetId, token) => {\n  const url = endpoints.GET_ADS(adsetId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getInterestStats = async (adId, token) => {\n  const url = endpoints.GET_STATS(adId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/api/api.js"],"names":["axios","endpoints","splitArray","signUp","email","password","url","endpoint","SIGN_UP","data","res","post","fbAuthentication","token","id","fbId","FB_AUTH","params","get","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","response","interest_list","push","page","paging","next","compileInterestSuggestions","length","suggestions","dataArray","i","getProducts","shopName","GET_PRODUCTS","console","log","getAdAccounts","GET_ADACCOUNTS","headers","fbPaginate","getCampaigns","accountId","GET_CAMPAIGNS","getAdsets","camaignId","GET_ADSETS","getAds","adsetId","GET_ADS","getInterestStats","adId","GET_STATS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const signUp = async (email, password) =>{\n    const url = endpoint.SIGN_UP\n    const data = {\n        email,\n        password\n    }\n\n    const res = await axios.post(url, data)\n}\n\nexport const fbAuthentication = async (token, id, fbId) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id, \n        fbId\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 500) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    let interestSuggestions = []\n    let response\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    response = await axios.get(url, {\n        params\n    })\n    interestSuggestions.push(...response.data.data)\n    let page = 0;\n    while(response.data.paging.next){\n        if(page > 5){\n            break\n        }\n        response = await axios.get(response.data.paging.next);\n        interestSuggestions.push(...response.data.data);\n        page++\n    }\n    return interestSuggestions\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    \n    if(keywords.length > 200){\n        let suggestions = []\n        const dataArray = splitArray(keywords, 200)\n        for(let i=0; i< dataArray.length; i++){\n            suggestions.push(...await getInterestSuggestions(token, dataArray[i], limit))\n        }\n        return suggestions\n    }\n\n    return await getInterestSuggestions(token, keywords, limit)\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}\n\nexport const getAdAccounts = async (fbId, token) => {\n    const url = endpoints.GET_ADACCOUNTS(fbId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const params = {\n        fbId\n    }\n\n    const res = await axios.get(url,{\n        headers,\n        params\n    })\n\n    return res.data\n}\n\nexport const fbPaginate = async (page) => {\n    const res =  await axios.get(page)\n    return res.data\n}\n\nexport const getCampaigns = async (accountId, token) => {\n    const url = endpoints.GET_CAMPAIGNS(accountId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport const getAdsets = async (camaignId, token) => {\n    const url = endpoints.GET_ADSETS(camaignId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport const getAds = async (adsetId, token) => {\n    const url = endpoints.GET_ADS(adsetId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport const getInterestStats = async (adId, token) => {\n    const url = endpoints.GET_STATS(adId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}