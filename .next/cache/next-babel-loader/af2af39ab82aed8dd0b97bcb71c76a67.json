{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user-types\";\nimport { siginSuccess, signupSuccess, signupFailure, setCurrentUser, siginFailure, isLoading, facebookAuthSuccess, fbAuthFailure, userLogoutSuccess, userLogoutFailure } from \"./user-actions\";\nimport { fbAuthentication, signUp, signIn, userLogout } from \"../../api/api\";\nexport function* setUser({\n  payload\n}) {\n  try {\n    yield put(isLoading(true));\n\n    if (!payload) {\n      throw new Error(\"No user\");\n    }\n\n    yield put(setCurrentUser(payload));\n    yield put(siginSuccess(true));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(siginFailure(error));\n    yield put(isLoading(false));\n  }\n}\nexport function* signUpUser({\n  payload\n}) {\n  try {\n    yield put(isLoading(true));\n    console.log(\"the payload\", payload);\n    const res = yield signUp(payload.email, payload.password);\n    const userData = {\n      id: res._id,\n      name: res.name,\n      email: res.email,\n      xToken: res.xToken\n    };\n    console.log(\"User data\", userData);\n    yield put(setCurrentUser(userData));\n    yield put(signupSuccess(true));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\nexport function* signInUser({\n  payload\n}) {\n  try {\n    yield put(isLoading(true));\n    const res = yield signIn(payload.email, payload.password);\n    const userData = {\n      id: res._id,\n      name: res.name,\n      email: res.email,\n      xToken: res.xToken\n    };\n    yield put(setCurrentUser(userData));\n    yield put(isLoading(false));\n    console.log(\"signin response\", userData);\n  } catch (error) {\n    yield put(isLoading(false));\n    yield put(siginFailure(error));\n  }\n}\nexport function* facebookAuth({\n  payload\n}) {\n  yield put(isLoading(true));\n\n  try {\n    const {\n      token,\n      id,\n      fbId,\n      name\n    } = payload;\n    console.log('payload', payload);\n    yield put(isLoading(true));\n    const fbToken = yield fbAuthentication(token, id, fbId, name);\n    yield put(facebookAuthSuccess(fbToken));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(fbAuthFailure(error));\n    yield put(isLoading(false));\n  }\n}\nexport function* logout({\n  payload\n}) {\n  try {\n    yield put(isLoading(true));\n    const res = yield userLogout(payload);\n\n    if (res === true) {\n      console.log('logout done');\n      yield put(userLogoutSuccess());\n      yield put(isLoading(false));\n    }\n  } catch (error) {\n    yield put(isLoading(false));\n    yield put(userLogoutFailure(error));\n  }\n}\nexport function* onAddingCurrentUser() {\n  yield takeLatest(UserActionTypes.ADDING_CURRENT_USER, setUser);\n}\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUser);\n}\nexport function* onSigninStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signInUser);\n}\nexport function* onAuthFacebook() {\n  yield takeLatest(UserActionTypes.AUTH_FACEBOOK, facebookAuth);\n}\nexport function* onLogout() {\n  yield takeLatest(UserActionTypes.LOG_OUT, logout);\n}\nexport function* userSagas() {\n  yield all([call(onAuthFacebook), call(onAddingCurrentUser), call(onSigninStart), call(onSignupStart), call(onLogout)]);\n}","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","siginSuccess","signupSuccess","signupFailure","setCurrentUser","siginFailure","isLoading","facebookAuthSuccess","fbAuthFailure","userLogoutSuccess","userLogoutFailure","fbAuthentication","signUp","signIn","userLogout","setUser","payload","Error","error","signUpUser","console","log","res","email","password","userData","id","_id","name","xToken","signInUser","facebookAuth","token","fbId","fbToken","logout","onAddingCurrentUser","ADDING_CURRENT_USER","onSignupStart","SIGN_UP_START","onSigninStart","SIGN_IN_START","onAuthFacebook","AUTH_FACEBOOK","onLogout","LOG_OUT","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,SANF,EAOEC,mBAPF,EAQEC,aARF,EASEC,iBATF,EAUEC,iBAVF,QAWO,gBAXP;AAYA,SAASC,gBAAT,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,UAA3C,QAA6D,eAA7D;AAEA,OAAO,UAAUC,OAAV,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAI;AACF,UAAMnB,GAAG,CAACS,SAAS,CAAC,IAAD,CAAV,CAAT;;AACA,QAAI,CAACU,OAAL,EAAc;AACZ,YAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AACD;;AAED,UAAMpB,GAAG,CAACO,cAAc,CAACY,OAAD,CAAf,CAAT;AACA,UAAMnB,GAAG,CAACI,YAAY,CAAC,IAAD,CAAb,CAAT;AACA,UAAMJ,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACD,GATD,CASE,OAAOY,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACQ,YAAY,CAACa,KAAD,CAAb,CAAT;AACA,UAAMrB,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACD;AACF;AAED,OAAO,UAAUa,UAAV,CAAqB;AAAEH,EAAAA;AAAF,CAArB,EAAkC;AACvC,MAAI;AACF,UAAMnB,GAAG,CAACS,SAAS,CAAC,IAAD,CAAV,CAAT;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,OAA3B;AACA,UAAMM,GAAG,GAAG,MAAMV,MAAM,CAACI,OAAO,CAACO,KAAT,EAAgBP,OAAO,CAACQ,QAAxB,CAAxB;AAEA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEJ,GAAG,CAACK,GADO;AAEfC,MAAAA,IAAI,EAAEN,GAAG,CAACM,IAFK;AAGfL,MAAAA,KAAK,EAAED,GAAG,CAACC,KAHI;AAIfM,MAAAA,MAAM,EAAEP,GAAG,CAACO;AAJG,KAAjB;AAMAT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,QAAzB;AACA,UAAM5B,GAAG,CAACO,cAAc,CAACqB,QAAD,CAAf,CAAT;AACA,UAAM5B,GAAG,CAACK,aAAa,CAAC,IAAD,CAAd,CAAT;AACA,UAAML,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACD,GAfD,CAeE,OAAOY,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACM,aAAa,CAACe,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUY,UAAV,CAAqB;AAAEd,EAAAA;AAAF,CAArB,EAAkC;AACvC,MAAI;AACF,UAAMnB,GAAG,CAACS,SAAS,CAAC,IAAD,CAAV,CAAT;AACA,UAAMgB,GAAG,GAAG,MAAMT,MAAM,CAACG,OAAO,CAACO,KAAT,EAAgBP,OAAO,CAACQ,QAAxB,CAAxB;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEJ,GAAG,CAACK,GADO;AAEfC,MAAAA,IAAI,EAAEN,GAAG,CAACM,IAFK;AAGfL,MAAAA,KAAK,EAAED,GAAG,CAACC,KAHI;AAIfM,MAAAA,MAAM,EAAEP,GAAG,CAACO;AAJG,KAAjB;AAMA,UAAMhC,GAAG,CAACO,cAAc,CAACqB,QAAD,CAAf,CAAT;AACA,UAAM5B,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,QAA/B;AACD,GAZD,CAYE,OAAOP,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACA,UAAMT,GAAG,CAACQ,YAAY,CAACa,KAAD,CAAb,CAAT;AACD;AACF;AAED,OAAO,UAAUa,YAAV,CAAuB;AAAEf,EAAAA;AAAF,CAAvB,EAAoC;AACzC,QAAMnB,GAAG,CAACS,SAAS,CAAC,IAAD,CAAV,CAAT;;AACA,MAAI;AACF,UAAM;AAAE0B,MAAAA,KAAF;AAASN,MAAAA,EAAT;AAAaO,MAAAA,IAAb;AAAmBL,MAAAA;AAAnB,QAA4BZ,OAAlC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;AACA,UAAMnB,GAAG,CAACS,SAAS,CAAC,IAAD,CAAV,CAAT;AACA,UAAM4B,OAAO,GAAG,MAAMvB,gBAAgB,CAACqB,KAAD,EAAQN,EAAR,EAAYO,IAAZ,EAAkBL,IAAlB,CAAtC;AAEA,UAAM/B,GAAG,CAACU,mBAAmB,CAAC2B,OAAD,CAApB,CAAT;AACA,UAAMrC,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACD,GARD,CAQE,OAAOY,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACW,aAAa,CAACU,KAAD,CAAd,CAAT;AACA,UAAMrB,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACD;AACF;AAED,OAAO,UAAU6B,MAAV,CAAiB;AAACnB,EAAAA;AAAD,CAAjB,EAA2B;AAChC,MAAI;AACF,UAAMnB,GAAG,CAACS,SAAS,CAAC,IAAD,CAAV,CAAT;AACA,UAAMgB,GAAG,GAAG,MAAMR,UAAU,CAACE,OAAD,CAA5B;;AACA,QAAGM,GAAG,KAAK,IAAX,EAAiB;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAMxB,GAAG,CAACY,iBAAiB,EAAlB,CAAT;AACA,YAAMZ,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACD;AACF,GARD,CAQE,OAAOY,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACS,SAAS,CAAC,KAAD,CAAV,CAAT;AACA,UAAMT,GAAG,CAACa,iBAAiB,CAACQ,KAAD,CAAlB,CAAT;AACD;AACF;AAED,OAAO,UAAUkB,mBAAV,GAAgC;AACrC,QAAMxC,UAAU,CAACI,eAAe,CAACqC,mBAAjB,EAAsCtB,OAAtC,CAAhB;AACD;AAED,OAAO,UAAUuB,aAAV,GAA0B;AAC/B,QAAM1C,UAAU,CAACI,eAAe,CAACuC,aAAjB,EAAgCpB,UAAhC,CAAhB;AACD;AAED,OAAO,UAAUqB,aAAV,GAA0B;AAC/B,QAAM5C,UAAU,CAACI,eAAe,CAACyC,aAAjB,EAAgCX,UAAhC,CAAhB;AACD;AAED,OAAO,UAAUY,cAAV,GAA2B;AAChC,QAAM9C,UAAU,CAACI,eAAe,CAAC2C,aAAjB,EAAgCZ,YAAhC,CAAhB;AACD;AAED,OAAO,UAAUa,QAAV,GAAqB;AAC1B,QAAMhD,UAAU,CAACI,eAAe,CAAC6C,OAAjB,EAA0BV,MAA1B,CAAhB;AACD;AAED,OAAO,UAAUW,SAAV,GAAsB;AAC3B,QAAMhD,GAAG,CAAC,CACRC,IAAI,CAAC2C,cAAD,CADI,EAER3C,IAAI,CAACqC,mBAAD,CAFI,EAGRrC,IAAI,CAACyC,aAAD,CAHI,EAIRzC,IAAI,CAACuC,aAAD,CAJI,EAKRvC,IAAI,CAAC6C,QAAD,CALI,CAAD,CAAT;AAOD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user-types\";\nimport {\n  siginSuccess,\n  signupSuccess,\n  signupFailure,\n  setCurrentUser,\n  siginFailure,\n  isLoading,\n  facebookAuthSuccess,\n  fbAuthFailure,\n  userLogoutSuccess,\n  userLogoutFailure\n} from \"./user-actions\";\nimport { fbAuthentication, signUp, signIn, userLogout } from \"../../api/api\";\n\nexport function* setUser({ payload }) {\n  try {\n    yield put(isLoading(true));\n    if (!payload) {\n      throw new Error(\"No user\");\n    }\n\n    yield put(setCurrentUser(payload));\n    yield put(siginSuccess(true));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(siginFailure(error));\n    yield put(isLoading(false));\n  }\n}\n\nexport function* signUpUser({ payload }) {\n  try {\n    yield put(isLoading(true));\n    console.log(\"the payload\", payload);\n    const res = yield signUp(payload.email, payload.password);\n\n    const userData = {\n      id: res._id,\n      name: res.name,\n      email: res.email,\n      xToken: res.xToken,\n    };\n    console.log(\"User data\", userData);\n    yield put(setCurrentUser(userData));\n    yield put(signupSuccess(true));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\n\nexport function* signInUser({ payload }) {\n  try {\n    yield put(isLoading(true));\n    const res = yield signIn(payload.email, payload.password);\n    const userData = {\n      id: res._id,\n      name: res.name,\n      email: res.email,\n      xToken: res.xToken,\n    };\n    yield put(setCurrentUser(userData));\n    yield put(isLoading(false));\n    console.log(\"signin response\", userData);\n  } catch (error) {\n    yield put(isLoading(false));\n    yield put(siginFailure(error));\n  }\n}\n\nexport function* facebookAuth({ payload }) {\n  yield put(isLoading(true));\n  try {\n    const { token, id, fbId, name } = payload;\n    console.log('payload', payload)\n    yield put(isLoading(true));\n    const fbToken = yield fbAuthentication(token, id, fbId, name);\n\n    yield put(facebookAuthSuccess(fbToken));\n    yield put(isLoading(false));\n  } catch (error) {\n    yield put(fbAuthFailure(error));\n    yield put(isLoading(false));\n  }\n}\n\nexport function* logout({payload}){\n  try {\n    yield put(isLoading(true));\n    const res = yield userLogout(payload)\n    if(res === true) {\n      console.log('logout done')\n      yield put(userLogoutSuccess())\n      yield put(isLoading(false));\n    }\n  } catch (error) {\n    yield put(isLoading(false));\n    yield put(userLogoutFailure(error))\n  }\n}\n\nexport function* onAddingCurrentUser() {\n  yield takeLatest(UserActionTypes.ADDING_CURRENT_USER, setUser);\n}\n\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUser);\n}\n\nexport function* onSigninStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signInUser);\n}\n\nexport function* onAuthFacebook() {\n  yield takeLatest(UserActionTypes.AUTH_FACEBOOK, facebookAuth);\n}\n\nexport function* onLogout() {\n  yield takeLatest(UserActionTypes.LOG_OUT, logout)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onAuthFacebook),\n    call(onAddingCurrentUser),\n    call(onSigninStart),\n    call(onSignupStart),\n    call(onLogout)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}