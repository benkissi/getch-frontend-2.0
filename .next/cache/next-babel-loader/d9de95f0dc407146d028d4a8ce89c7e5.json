{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { searchSuccess, searchFailure, isLoading } from './search-actions';\nimport { searchInterest } from '../../api/api';\nimport { addScore, getInterestNames } from '../../utils/search';\nimport SearchActionTypes from './search-types';\n\nfunction* getInterest({\n  payload\n}) {\n  try {\n    const {\n      token,\n      value,\n      limit\n    } = payload;\n    yield put(isLoading(true));\n    const data = yield searchInterest(token, value, limit);\n    const levelOne = addScore(data.data, 5);\n    const names = getInterestNames(data.data);\n    console.log('names*****', names);\n    yield put(searchSuccess(levelOne));\n    put(isLoading(false));\n  } catch (error) {\n    yield put(isLoading(false));\n    yield put(searchFailure(error));\n  }\n}\n\nexport function* onSearchStart() {\n  yield takeLatest(SearchActionTypes.START_SEARCH, getInterest);\n}\nexport function* searchSagas() {\n  yield all([call(onSearchStart)]);\n}","map":{"version":3,"sources":["/code/ben/getch/frontend/redux/search/search-sagas.js"],"names":["takeLatest","put","all","call","searchSuccess","searchFailure","isLoading","searchInterest","addScore","getInterestNames","SearchActionTypes","getInterest","payload","token","value","limit","data","levelOne","names","console","log","error","onSearchStart","START_SEARCH","searchSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,SAAvC,QAAwD,kBAAxD;AAEA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,QAAyC,oBAAzC;AACA,OAAOC,iBAAP,MAA8B,gBAA9B;;AAEA,UAAUC,WAAV,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAC9B,MAAG;AACC,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAwBH,OAA9B;AACA,UAAMX,GAAG,CAACK,SAAS,CAAC,IAAD,CAAV,CAAT;AACA,UAAMU,IAAI,GAAG,MAAMT,cAAc,CAACM,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAjC;AACA,UAAME,QAAQ,GAAGT,QAAQ,CAACQ,IAAI,CAACA,IAAN,EAAY,CAAZ,CAAzB;AACA,UAAME,KAAK,GAAGT,gBAAgB,CAACO,IAAI,CAACA,IAAN,CAA9B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,UAAMjB,GAAG,CAACG,aAAa,CAACa,QAAD,CAAd,CAAT;AACAhB,IAAAA,GAAG,CAACK,SAAS,CAAC,KAAD,CAAV,CAAH;AACH,GATD,CASC,OAAMe,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACK,SAAS,CAAC,KAAD,CAAV,CAAT;AACA,UAAML,GAAG,CAACI,aAAa,CAACgB,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,aAAV,GAA2B;AAC9B,QAAMtB,UAAU,CAACU,iBAAiB,CAACa,YAAnB,EAAiCZ,WAAjC,CAAhB;AACH;AAED,OAAO,UAAUa,WAAV,GAAyB;AAC5B,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACmB,aAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { searchSuccess, searchFailure, isLoading } from './search-actions'\n\nimport {searchInterest} from '../../api/api'\nimport {addScore, getInterestNames} from '../../utils/search'\nimport SearchActionTypes from './search-types'\n\nfunction* getInterest ({payload}) {\n    try{\n        const {token, value, limit} = payload\n        yield put(isLoading(true))\n        const data = yield searchInterest(token, value, limit)\n        const levelOne = addScore(data.data, 5)\n        const names = getInterestNames(data.data)\n        console.log('names*****', names)\n        yield put(searchSuccess(levelOne))\n        put(isLoading(false))\n    }catch(error){\n        yield put(isLoading(false))\n        yield put(searchFailure(error))\n    }\n}\n\nexport function* onSearchStart () {\n    yield takeLatest(SearchActionTypes.START_SEARCH, getInterest)\n}\n\nexport function* searchSagas () {\n    yield all([\n        call(onSearchStart)\n    ])\n}\n\n"]},"metadata":{},"sourceType":"module"}