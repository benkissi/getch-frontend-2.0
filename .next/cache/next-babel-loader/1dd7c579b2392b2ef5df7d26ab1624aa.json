{"ast":null,"code":"export const addScore = (data, score) => {\n  const updated = data.map(item => {\n    if (item.hasOwnProperty(\"relevance\")) {\n      return item.relevance = item.relevance + score;\n    }\n\n    item[\"relevance\"] = score;\n    return item;\n  });\n  return updated;\n};\nexport const getInterestNames = data => {\n  const names = data.map(item => {\n    return item.name;\n  });\n  return names;\n};\nexport const containsKeyword = (key, phrase) => {\n  const lowerPhrase = phrase.toLowerCase();\n  const lowerKey = key.toLowerCase();\n  return lowerPhrase.indexOf(lowerKey);\n};\nexport const splitArray = (array, size) => {\n  const length = array.length;\n  const setNumber = Math.ceil(length / size);\n  let limit = size;\n  let start = 0;\n  let arraySplit = [];\n\n  for (let i = 0; i < setNumber; i++) {\n    const set = array.slice(start, limit);\n    arraySplit.push(set);\n    limit = limit + size;\n    start = start + size;\n  }\n\n  return arraySplit;\n};\nexport const addLinks = array => {\n  const updated = data.map(item => {\n    item[\"links\"] = [`https://www.facebook.com/search/pages/?q=${item.name}`, `https://www.google.com/search?q=${item.name}`];\n    return item;\n  });\n  return updated;\n};","map":{"version":3,"sources":["/home/ben/code/million/getch-frontend-2.0/utils/search.js"],"names":["addScore","data","score","updated","map","item","hasOwnProperty","relevance","getInterestNames","names","name","containsKeyword","key","phrase","lowerPhrase","toLowerCase","lowerKey","indexOf","splitArray","array","size","length","setNumber","Math","ceil","limit","start","arraySplit","i","set","slice","push","addLinks"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,QAAMC,OAAO,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AACjC,QAAIA,IAAI,CAACC,cAAL,CAAoB,WAApB,CAAJ,EAAsC;AACpC,aAAQD,IAAI,CAACE,SAAL,GAAiBF,IAAI,CAACE,SAAL,GAAiBL,KAA1C;AACD;;AACDG,IAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoBH,KAApB;AACA,WAAOG,IAAP;AACD,GANe,CAAhB;AAQA,SAAOF,OAAP;AACD,CAVM;AAYP,OAAO,MAAMK,gBAAgB,GAAIP,IAAD,IAAU;AACxC,QAAMQ,KAAK,GAAGR,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AAC/B,WAAOA,IAAI,CAACK,IAAZ;AACD,GAFa,CAAd;AAIA,SAAOD,KAAP;AACD,CANM;AAQP,OAAO,MAAME,eAAe,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9C,QAAMC,WAAW,GAAGD,MAAM,CAACE,WAAP,EAApB;AACA,QAAMC,QAAQ,GAAGJ,GAAG,CAACG,WAAJ,EAAjB;AAEA,SAAOD,WAAW,CAACG,OAAZ,CAAoBD,QAApB,CAAP;AACD,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzC,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,MAAM,GAAGD,IAAnB,CAAlB;AACA,MAAIK,KAAK,GAAGL,IAAZ;AACA,MAAIM,KAAK,GAAG,CAAZ;AACA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAApB,EAA+BM,CAAC,EAAhC,EAAoC;AAClC,UAAMC,GAAG,GAAGV,KAAK,CAACW,KAAN,CAAYJ,KAAZ,EAAmBD,KAAnB,CAAZ;AACAE,IAAAA,UAAU,CAACI,IAAX,CAAgBF,GAAhB;AACAJ,IAAAA,KAAK,GAAGA,KAAK,GAAGL,IAAhB;AACAM,IAAAA,KAAK,GAAGA,KAAK,GAAGN,IAAhB;AACD;;AACD,SAAOO,UAAP;AACD,CAdM;AAgBP,OAAO,MAAMK,QAAQ,GAAIb,KAAD,IAAW;AACjC,QAAMhB,OAAO,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AACjCA,IAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgB,CACb,4CAA2CA,IAAI,CAACK,IAAK,EADxC,EAEb,mCAAkCL,IAAI,CAACK,IAAK,EAF/B,CAAhB;AAIA,WAAOL,IAAP;AACD,GANe,CAAhB;AAQA,SAAOF,OAAP;AACD,CAVM","sourcesContent":["export const addScore = (data, score) => {\n  const updated = data.map((item) => {\n    if (item.hasOwnProperty(\"relevance\")) {\n      return (item.relevance = item.relevance + score);\n    }\n    item[\"relevance\"] = score;\n    return item;\n  });\n\n  return updated;\n};\n\nexport const getInterestNames = (data) => {\n  const names = data.map((item) => {\n    return item.name;\n  });\n\n  return names;\n};\n\nexport const containsKeyword = (key, phrase) => {\n  const lowerPhrase = phrase.toLowerCase();\n  const lowerKey = key.toLowerCase();\n\n  return lowerPhrase.indexOf(lowerKey);\n};\n\nexport const splitArray = (array, size) => {\n  const length = array.length;\n  const setNumber = Math.ceil(length / size);\n  let limit = size;\n  let start = 0;\n  let arraySplit = [];\n\n  for (let i = 0; i < setNumber; i++) {\n    const set = array.slice(start, limit);\n    arraySplit.push(set);\n    limit = limit + size;\n    start = start + size;\n  }\n  return arraySplit;\n};\n\nexport const addLinks = (array) => {\n  const updated = data.map((item) => {\n    item[\"links\"] = [\n      `https://www.facebook.com/search/pages/?q=${item.name}`,\n      `https://www.google.com/search?q=${item.name}`,\n    ];\n    return item;\n  });\n\n  return updated;\n};\n"]},"metadata":{},"sourceType":"module"}