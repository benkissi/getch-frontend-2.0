{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { chartData } from \"../utils/table\";\nimport Table from \"../components/table\";\nimport AdAccount from \"../components/adAccount\";\nimport { performanceColumns } from \"../utils/table\";\nimport { truncate } from \"../utils/common\";\nimport { getAdAccounts, fbPaginate, getCampaigns, getAdsets, getAds, getInterestStats } from \"../api/api\";\n\nfunction Performance(props) {\n  var _useState = useState({\n    accountModalVisible: false,\n    campaignModalVisible: false,\n    selectedRowKeys: null,\n    pagingAccounts: {\n      next: \"\",\n      previous: \"\"\n    },\n    pagingCampaigns: {\n      next: \"\",\n      previous: \"\"\n    },\n    selectedAdAccount: {},\n    selectedCampaign: {},\n    selectedAdset: {},\n    selectedAd: {},\n    fetchingCampaigns: false,\n    fetchingAdsets: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var fbId = props.fbId,\n      user = props.user;\n  useEffect(function () {\n    if (true) {\n      console.log(\"on browser\");\n\n      var _require = require(\"@antv/g2plot\"),\n          Column = _require.Column;\n\n      var chart = new Column(document.getElementById(\"chart\"), {\n        data: chartData,\n        xField: \"name\",\n        yField: \"value\",\n        padding: \"auto\",\n        title: {\n          visible: true,\n          text: \"Interest stats\"\n        },\n        forceFit: true\n      });\n      console.log(\"el\", document.getElementById(\"chart\"));\n      chart.render();\n    }\n  }, []);\n  useEffect(function () {\n    if (state.accountModalVisible) {\n      fetchAdAccounts();\n    }\n  }, [state.accountModalVisible]);\n  useEffect(function () {\n    if (state.selectedAdAccount.id) {\n      setModalVisible(false, \"accountModalVisible\");\n      fetchCampaigns();\n    }\n  }, [state.selectedAdAccount]);\n  useEffect(function () {\n    if (state.selectedCampaign.id) {\n      fetchAdsets();\n    }\n  }, [state.selectedCampaign]);\n  useEffect(function () {\n    if (state.selectedAdset.id) {\n      fetchAds();\n    }\n  }, [state.selectedAdset]);\n  useEffect(function () {\n    if (state.selectedAd.id) {\n      fetchStats();\n    }\n  }, [state.selectedAd]);\n\n  var setModalVisible = function setModalVisible(status, modalName) {\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, modalName, status));\n    });\n  };\n\n  var setCampaignsModal = function setCampaignsModal(modalVisible) {\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        campaignModalVisible: modalVisible\n      });\n    });\n  };\n\n  var fetchAdAccounts = function fetchAdAccounts() {\n    var adAccounts;\n    return _regeneratorRuntime.async(function fetchAdAccounts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!state.accountModalVisible) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\"fetch ad accounts\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getAdAccounts(fbId, user.xToken));\n\n          case 4:\n            adAccounts = _context.sent;\n            console.log(\"AD accoutns\", adAccounts);\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                adAccounts: adAccounts,\n                pagingAccounts: {\n                  next: adAccounts.paging.next && adAccounts.paging.next,\n                  previous: adAccounts.paging.previous && adAccounts.paging.previous\n                },\n                selectedAdAccount: {},\n                selectedCampaign: {},\n                selectedAdset: {}\n              });\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var fetchCampaigns = function fetchCampaigns() {\n    var accountId, res;\n    return _regeneratorRuntime.async(function fetchCampaigns$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                fetchingCampaigns: true,\n                selectedCampaign: {}\n              });\n            });\n            accountId = state.selectedAdAccount.id;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getCampaigns(accountId, user.xToken));\n\n          case 4:\n            res = _context2.sent;\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                campaigns: res,\n                fetchingCampaigns: false,\n                pagingCampaigns: {\n                  next: res.paging && res.paging.next,\n                  previous: res.paging && res.paging.previous\n                }\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var fetchAdsets = function fetchAdsets() {\n    var campaignId, res;\n    return _regeneratorRuntime.async(function fetchAdsets$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                fetchingAdsets: true,\n                selectedAdset: {}\n              });\n            });\n            campaignId = state.selectedCampaign.id;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(getAdsets(campaignId, user.xToken));\n\n          case 4:\n            res = _context3.sent;\n            console.log(\"sets\", res.data);\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                adsets: res,\n                fetchingAdsets: false\n              });\n            });\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n\n  var fetchAds = function fetchAds() {\n    var adsetId, res;\n    return _regeneratorRuntime.async(function fetchAds$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                fetchingAds: true\n              });\n            });\n            adsetId = state.selectedAdset.id;\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(getAds(adsetId, user.xToken));\n\n          case 4:\n            res = _context4.sent;\n            console.log(\"ads\", res);\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                ads: res,\n                fetchingAds: false\n              });\n            });\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n\n  var fetchStats = function fetchStats() {\n    var adId, res;\n    return _regeneratorRuntime.async(function fetchStats$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                fetchingStats: true\n              });\n            });\n            adId = state.selectedAd.id;\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(getInterestStats(adId, user.xToken));\n\n          case 4:\n            res = _context5.sent;\n            console.log(\"stats\", res);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n\n  var handleAccountPagination = function handleAccountPagination(page) {\n    var adAccounts;\n    return _regeneratorRuntime.async(function handleAccountPagination$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(fbPaginate(page));\n\n          case 2:\n            adAccounts = _context6.sent;\n            console.log(\"paginate\", adAccounts);\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                adAccounts: adAccounts,\n                pagingAccounts: {\n                  next: adAccounts.paging && adAccounts.paging.next,\n                  previous: adAccounts.paging && adAccounts.paging.previous\n                }\n              });\n            });\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  };\n\n  var handleCampaignPagination = function handleCampaignPagination(page) {\n    var campaigns;\n    return _regeneratorRuntime.async(function handleCampaignPagination$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(fbPaginate(page));\n\n          case 2:\n            campaigns = _context7.sent;\n            console.log(\"paginate\", campaigns);\n            setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                campaigns: campaigns,\n                pagingCampaigns: {\n                  next: campaigns.paging && campaigns.paging.next,\n                  previous: campaigns.paging && campaigns.paging.previous\n                }\n              });\n            });\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  };\n\n  var onSelectionChange = function onSelectionChange(selectedRowKeys, selectedRows) {\n    console.log(\"rows\", selectedRows);\n    var selectedInterest = selectedRows.map(function (interest) {\n      return interest.name;\n    });\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        selectedRowKeys: selectedRowKeys,\n        selectedInterest: selectedInterest,\n        selectedRows: selectedRows\n      });\n    });\n  };\n\n  var handleAccountSelect = function handleAccountSelect(id, name) {\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        selectedAdAccount: {\n          id: id,\n          name: name\n        }\n      });\n    });\n  };\n\n  var handleCampaignSelect = function handleCampaignSelect(id, name) {\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        selectedCampaign: {\n          id: id,\n          name: name\n        },\n        campaignModalVisible: false\n      });\n    });\n  };\n\n  var handleAdsetSelect = function handleAdsetSelect(value, option) {\n    console.log(\"selected\", option.props.children);\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        selectedAdset: {\n          id: option.props.value,\n          name: option.props.children\n        }\n      });\n    });\n  };\n\n  var handleAdSelect = function handleAdSelect(value, option) {\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        selectedAd: {\n          id: option.props.value,\n          name: option.props.children\n        }\n      });\n    });\n  };\n\n  var Option = _Select.Option;\n  var selectedRowKeys = state.selectedRowKeys;\n  return __jsx(\"div\", {\n    id: \"performance\",\n    className: \"jsx-290073997\"\n  }, __jsx(_Row, {\n    gutter: 16,\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(_Col, {\n    span: 4\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"selection\"\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"button item\"\n  }, __jsx(_Button, {\n    style: {\n      textAlign: \"left\"\n    },\n    className: \"modalButtons\",\n    onClick: function onClick() {\n      return setModalVisible(true, \"accountModalVisible\");\n    },\n    block: true\n  }, state.selectedAdAccount.name ? truncate(state.selectedAdAccount.name, 30) : \"Select Ad Account\")), __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"select item\"\n  }, __jsx(_Button, {\n    style: {\n      textAlign: \"left\"\n    },\n    onClick: function onClick() {\n      return setCampaignsModal(true);\n    },\n    block: true,\n    loading: state.fetchingCampaigns,\n    disabled: !!!state.selectedAdAccount.name\n  }, state.selectedCampaign.name ? truncate(state.selectedCampaign.name, 30) : \"Select Campaign\")), __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"select item\"\n  }, __jsx(_Select, {\n    disabled: !!!state.selectedCampaign.name,\n    value: state.selectedAdset.name ? state.selectedAdset.name : \"Select Adset\",\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Select Adset\",\n    loading: state.fetchingAdsets,\n    showSearch: true,\n    optionFilterProp: \"children\",\n    onSelect: handleAdsetSelect,\n    filterOption: function filterOption(input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }, state.adsets ? state.adsets.data.map(function (item, index) {\n    return __jsx(Option, {\n      value: item.id,\n      key: index\n    }, item.name);\n  }) : \"\")), __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"select item\"\n  }, __jsx(_Select, {\n    disabled: !!!state.selectedAdset.name,\n    style: {\n      width: \"100%\"\n    },\n    value: state.selectedAd.name ? state.selectedAd.name : \"Select Ad\",\n    placeholder: \"Select ad\",\n    showSearch: true,\n    optionFilterProp: \"children\",\n    onSelect: handleAdSelect,\n    filterOption: function filterOption(input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }, state.ads ? state.ads.data.map(function (item, index) {\n    return __jsx(Option, {\n      value: item.id,\n      key: index\n    }, item.name);\n  }) : \"\")))), __jsx(_Col, {\n    span: 20\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"stats\"\n  }, __jsx(\"div\", {\n    id: \"chart\",\n    className: \"jsx-290073997\"\n  }), __jsx(\"div\", {\n    className: \"jsx-290073997\"\n  }, __jsx(Table, {\n    columns: performanceColumns,\n    onSelection: onSelectionChange,\n    selectedRowKeys: selectedRowKeys,\n    className: \"table\"\n  }))))), __jsx(_Modal, {\n    title: \"Select an Ad account\",\n    centered: true,\n    visible: state.accountModalVisible,\n    onOk: function onOk() {\n      return setModalVisible(false, \"accountModalVisible\");\n    },\n    onCancel: function onCancel() {\n      return setModalVisible(false, \"accountModalVisible\");\n    },\n    okText: \"Next\",\n    cancelText: \"Previous\",\n    okButtonProps: {\n      disabled: !!!state.pagingAccounts.next,\n      onClick: function onClick() {\n        return handleAccountPagination(state.pagingAccounts.next);\n      }\n    },\n    cancelButtonProps: {\n      disabled: !!!state.pagingAccounts.previous,\n      onClick: function onClick() {\n        return handleAccountPagination(state.pagingAccounts.previous);\n      }\n    },\n    width: 1300\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"adAccounts\"\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"inner\"\n  }, state.adAccounts ? state.adAccounts.data.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-290073997\" + \" \" + \"account\"\n    }, __jsx(AdAccount, {\n      name: item.name,\n      accountId: item.id,\n      status: item.account_status,\n      onSelect: handleAccountSelect\n    }));\n  }) : \"Loading...\"))), __jsx(_Modal, {\n    title: \"Select a campaign\",\n    centered: true,\n    visible: state.campaignModalVisible,\n    onOk: function onOk() {\n      return setCampaignsModal(false, \"campaignModalVisible\");\n    },\n    onCancel: function onCancel() {\n      return setCampaignsModal(false, \"campaignModalVisible\");\n    },\n    okText: \"Next\",\n    cancelText: \"Previous\",\n    okButtonProps: {\n      disabled: !!!state.pagingCampaigns.next,\n      onClick: function onClick() {\n        return handleCampaignPagination(state.pagingCampaigns.next);\n      }\n    },\n    cancelButtonProps: {\n      disabled: !!!state.pagingCampaigns.previous,\n      onClick: function onClick() {\n        return handleCampaignPagination(state.pagingCampaigns.previous);\n      }\n    },\n    width: 1300\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"adAccounts\"\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"inner\"\n  }, state.campaigns ? state.campaigns.data.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-290073997\" + \" \" + \"account\"\n    }, __jsx(AdAccount, {\n      name: item.name,\n      accountId: item.id // status={item.account_status}\n      ,\n      onSelect: handleCampaignSelect\n    }));\n  }) : \"Loading...\"))), __jsx(_JSXStyle, {\n    id: \"290073997\"\n  }, [\"#performance.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;margin-top:70px;width:100%;}\", \".selection.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border:1px solid #ccc;border-radius:4px;height:auto;padding:10px;}\", \".item.jsx-290073997{margin-bottom:30px;width:100%;}\", \".stats.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".adAccounts.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".adAccounts.jsx-290073997 .inner.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:90%;}\", \".account.jsx-290073997{min-width:20%;margin:10px;}\"]));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.currentUser,\n    fbId: state.user.fbToken.fbId\n  };\n};\n\nexport default connect(mapStateToProps)(Performance);","map":null,"metadata":{},"sourceType":"module"}