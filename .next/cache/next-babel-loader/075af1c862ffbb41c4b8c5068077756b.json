{"ast":null,"code":"export const tableColumns = [{\n  title: 'Interest',\n  width: 70,\n  // dataIndex: 'name',\n  key: 'name',\n  sorter: (a, b) => a.name.length - b.name.length\n}, {\n  title: 'Audience',\n  width: 80,\n  // dataIndex: 'audience_size',\n  key: 'audience',\n  sorter: (a, b) => a.name.length - b.name.length\n}, {\n  title: 'Topic',\n  dataIndex: 'topic',\n  width: 100,\n  key: 'topic'\n}, {\n  title: 'Path',\n  // dataIndex: 'path',\n  key: 'path',\n  width: 60 // render: tags => (\n  //   <span>\n  //     {\n  //       tags?tags.map((tag, index) => {\n  //         return (\n  //           <div style={{display: 'inline'}}>\n  //             <Tag color=\"magenta\" key={index}>\n  //             {tag.toUpperCase()}\n  //             </Tag> \n  //           </div>\n  //         )\n  //       }):''\n  //     }\n  //   </span>\n  // )\n\n}, {\n  title: 'Relevance Score',\n  // dataIndex: 'relevance',\n  width: 100,\n  key: 'relevance',\n  sorter: (a, b) => a - b\n}];\nexport const performanceColumns = [{\n  title: 'Interest',\n  width: 70,\n  dataIndex: 'name',\n  key: 'name',\n  sorter: (a, b) => a.name.length - b.name.length\n}, {\n  title: 'CPC',\n  width: 70,\n  dataIndex: 'cpc',\n  key: 'cpc',\n  sorter: (a, b) => a - b\n}, {\n  title: 'Clicks',\n  width: 70,\n  dataIndex: 'clicks',\n  key: 'clicks',\n  sorter: (a, b) => a - b\n}, {\n  title: 'Spend',\n  width: 70,\n  dataIndex: 'spend',\n  key: 'spend',\n  sorter: (a, b) => a - b\n}, {\n  title: 'Conversions',\n  width: 70,\n  dataIndex: 'convertions',\n  key: 'convertions',\n  sorter: (a, b) => a - b\n}];\nexport const chartData = [{\n  name: 'Nike',\n  type: 'Spend',\n  value: 38\n}, {\n  name: 'Adidas',\n  type: 'Spend',\n  value: 52\n}, {\n  name: 'Shoe',\n  type: 'Spend',\n  value: 61\n}, {\n  name: 'Sandals',\n  type: 'Spend',\n  value: 145\n}, {\n  name: 'Slippers',\n  type: 'Spend',\n  value: 48\n}, {\n  name: 'Shorts',\n  type: 'Spend',\n  value: 38\n}];","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/utils/table.js"],"names":["tableColumns","title","width","key","sorter","a","b","name","length","dataIndex","performanceColumns","chartData","type","value"],"mappings":"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","sourcesContent":["import {Tag } from \"antd\";\nexport const tableColumns = [\n    {\n      title: 'Interest',\n      width: 70,\n      // dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: 'Audience',\n      width: 80,\n      // dataIndex: 'audience_size',\n      key: 'audience',\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: 'Topic',\n      dataIndex: 'topic',\n      width: 100,\n      key: 'topic'\n    },\n    {\n      title: 'Path',\n      // dataIndex: 'path',\n      key: 'path',\n      width: 60,\n      // render: tags => (\n      //   <span>\n      //     {\n      //       tags?tags.map((tag, index) => {\n      //         return (\n      //           <div style={{display: 'inline'}}>\n      //             <Tag color=\"magenta\" key={index}>\n      //             {tag.toUpperCase()}\n      //             </Tag> \n      //           </div>\n                \n      //         )\n      //       }):''\n      //     }\n      //   </span>\n      // )\n    },\n    {\n      title: 'Relevance Score',\n      // dataIndex: 'relevance',\n      width: 100,\n      key: 'relevance',\n      sorter: (a, b) => a - b\n    }\n  ]\n\n  export const performanceColumns = [\n    {\n      title: 'Interest',\n      width: 70,\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: 'CPC',\n      width: 70,\n      dataIndex: 'cpc',\n      key: 'cpc',\n      sorter: (a, b) => a - b,\n    },\n    {\n      title: 'Clicks',\n      width: 70,\n      dataIndex: 'clicks',\n      key: 'clicks',\n      sorter: (a, b) => a - b,\n    },\n    {\n      title: 'Spend',\n      width: 70,\n      dataIndex: 'spend',\n      key: 'spend',\n      sorter: (a, b) => a - b,\n    },\n    {\n      title: 'Conversions',\n      width: 70,\n      dataIndex: 'convertions',\n      key: 'convertions',\n      sorter: (a, b) => a - b,\n    },\n  ]\n\n export const chartData = [\n    {\n      name: 'Nike',\n      type: 'Spend',\n      value: 38,\n    },\n    {\n      name: 'Adidas',\n      type: 'Spend',\n      value: 52,\n    },\n    {\n      name: 'Shoe',\n      type: 'Spend',\n      value: 61,\n    },\n    {\n      name: 'Sandals',\n      type: 'Spend',\n      value: 145,\n    },\n    {\n      name: 'Slippers',\n      type: 'Spend',\n      value: 48,\n    },\n    {\n      name: 'Shorts',\n      type: 'Spend',\n      value: 38,\n    }\n]"]},"metadata":{},"sourceType":"module"}