{"ast":null,"code":"import SearchActionTypes from './search-types';\nexport const searchStart = searchParams => ({\n  type: SearchActionTypes.START_SEARCH,\n  payload: searchParams\n});\nexport const searchSuccess = data => ({\n  type: SearchActionTypes.SEARCH_SUCCESS,\n  payload: data\n});\nexport const searchFailure = error => ({\n  type: SearchActionTypes.SEARCH_FAILURE,\n  payload: error\n});\nexport const setInterestCount = count => ({\n  type: SearchActionTypes.SET_INTEREST_COUNT,\n  payload: count\n});\nexport const isLoading = status => ({\n  type: SearchActionTypes.IS_LOADING,\n  payload: status\n});","map":{"version":3,"sources":["/code/ben/getch/frontend/redux/search/search-actions.js"],"names":["SearchActionTypes","searchStart","searchParams","type","START_SEARCH","payload","searchSuccess","data","SEARCH_SUCCESS","searchFailure","error","SEARCH_FAILURE","setInterestCount","count","SET_INTEREST_COUNT","isLoading","status","IS_LOADING"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAGC,YAAY,KAAK;AACxCC,EAAAA,IAAI,EAAEH,iBAAiB,CAACI,YADgB;AAExCC,EAAAA,OAAO,EAAEH;AAF+B,CAAL,CAAhC;AAKP,OAAO,MAAMI,aAAa,GAAGC,IAAI,KAAK;AAClCJ,EAAAA,IAAI,EAAEH,iBAAiB,CAACQ,cADU;AAElCH,EAAAA,OAAO,EAAEE;AAFyB,CAAL,CAA1B;AAKP,OAAO,MAAME,aAAa,GAAGC,KAAK,KAAK;AACnCP,EAAAA,IAAI,EAAEH,iBAAiB,CAACW,cADW;AAEnCN,EAAAA,OAAO,EAAEK;AAF0B,CAAL,CAA3B;AAKP,OAAO,MAAME,gBAAgB,GAAGC,KAAK,KAAK;AACtCV,EAAAA,IAAI,EAAEH,iBAAiB,CAACc,kBADc;AAEtCT,EAAAA,OAAO,EAAEQ;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAME,SAAS,GAAGC,MAAM,KAAK;AAChCb,EAAAA,IAAI,EAAEH,iBAAiB,CAACiB,UADQ;AAEhCZ,EAAAA,OAAO,EAAEW;AAFuB,CAAL,CAAxB","sourcesContent":["import SearchActionTypes from './search-types'\n\nexport const searchStart = searchParams => ({\n    type: SearchActionTypes.START_SEARCH,\n    payload: searchParams\n})\n\nexport const searchSuccess = data => ({\n    type: SearchActionTypes.SEARCH_SUCCESS,\n    payload: data\n})\n\nexport const searchFailure = error => ({\n    type: SearchActionTypes.SEARCH_FAILURE,\n    payload: error\n})\n\nexport const setInterestCount = count => ({\n    type: SearchActionTypes.SET_INTEREST_COUNT,\n    payload: count\n})\n\nexport const isLoading = status => ({\n    type: SearchActionTypes.IS_LOADING,\n    payload: status\n})"]},"metadata":{},"sourceType":"module"}