{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport var signUp = function signUp(email, password) {\n  var url, data, res, token;\n  return _regeneratorRuntime.async(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('getting', email, password);\n          url = endpoints.SIGN_UP;\n          data = {\n            email: email,\n            password: password\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(axios.post(url, data));\n\n        case 5:\n          res = _context.sent;\n          token = res.headers['x-auth'].replace('Bearer ', '');\n          res.data['xToken'] = token;\n          return _context.abrupt(\"return\", res.data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signIn = function signIn(email, password) {\n  var url, params, res, token;\n  return _regeneratorRuntime.async(function signIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('sign in api');\n          url = endpoints.SIGN_IN;\n          params = {\n            email: email,\n            password: password\n          };\n          console.log('api', params);\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 6:\n          res = _context2.sent;\n          token = res.headers['x-auth'].replace('Bearer ', '');\n          res.data['xToken'] = token;\n          return _context2.abrupt(\"return\", res.data);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fbAuthentication = function fbAuthentication(token, id, fbId, name) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function fbAuthentication$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('name api', name);\n          url = endpoints.FB_AUTH;\n          params = {\n            token: token,\n            id: id,\n            fbId: fbId,\n            name: name\n          };\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 5:\n          res = _context3.sent;\n          console.log('res data', res.data);\n          return _context3.abrupt(\"return\", res.data);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var searchInterest = function searchInterest(token, keyword) {\n  var limit,\n      url,\n      params,\n      res,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function searchInterest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          limit = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 500;\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            q: keyword,\n            type: 'adinterest',\n            access_token: token,\n            limit: limit\n          };\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 5:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getInterestSuggestions = function getInterestSuggestions(token, keywords) {\n  var limit,\n      interestSuggestions,\n      response,\n      url,\n      params,\n      page,\n      _args5 = arguments;\n  return _regeneratorRuntime.async(function getInterestSuggestions$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          limit = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : 100;\n          interestSuggestions = [];\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            interest_list: keywords,\n            type: 'adinterestsuggestion',\n            access_token: token,\n            limit: limit\n          };\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 6:\n          response = _context5.sent;\n          interestSuggestions.push.apply(interestSuggestions, _toConsumableArray(response.data.data));\n          page = 0;\n\n        case 9:\n          if (!response.data.paging.next) {\n            _context5.next = 19;\n            break;\n          }\n\n          if (!(page > 5)) {\n            _context5.next = 12;\n            break;\n          }\n\n          return _context5.abrupt(\"break\", 19);\n\n        case 12:\n          _context5.next = 14;\n          return _regeneratorRuntime.awrap(axios.get(response.data.paging.next));\n\n        case 14:\n          response = _context5.sent;\n          interestSuggestions.push.apply(interestSuggestions, _toConsumableArray(response.data.data));\n          page++;\n          _context5.next = 9;\n          break;\n\n        case 19:\n          return _context5.abrupt(\"return\", interestSuggestions);\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var compileInterestSuggestions = function compileInterestSuggestions(token, keywords) {\n  var limit,\n      suggestions,\n      dataArray,\n      i,\n      _args6 = arguments;\n  return _regeneratorRuntime.async(function compileInterestSuggestions$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          limit = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : 100;\n\n          if (!(keywords.length > 200)) {\n            _context6.next = 18;\n            break;\n          }\n\n          suggestions = [];\n          dataArray = splitArray(keywords, 200);\n          i = 0;\n\n        case 5:\n          if (!(i < dataArray.length)) {\n            _context6.next = 17;\n            break;\n          }\n\n          _context6.t0 = suggestions.push;\n          _context6.t1 = suggestions;\n          _context6.t2 = _toConsumableArray;\n          _context6.next = 11;\n          return _regeneratorRuntime.awrap(getInterestSuggestions(token, dataArray[i], limit));\n\n        case 11:\n          _context6.t3 = _context6.sent;\n          _context6.t4 = (0, _context6.t2)(_context6.t3);\n\n          _context6.t0.apply.call(_context6.t0, _context6.t1, _context6.t4);\n\n        case 14:\n          i++;\n          _context6.next = 5;\n          break;\n\n        case 17:\n          return _context6.abrupt(\"return\", suggestions);\n\n        case 18:\n          _context6.next = 20;\n          return _regeneratorRuntime.awrap(getInterestSuggestions(token, keywords, limit));\n\n        case 20:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 21:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getProducts = function getProducts(shopName) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function getProducts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          url = endpoints.GET_PRODUCTS(shopName);\n          params = {\n            limit: 10\n          };\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context7.sent;\n          console.log(res.data);\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getAdAccounts = function getAdAccounts(fbId, token) {\n  var url, headers, params, res;\n  return _regeneratorRuntime.async(function getAdAccounts$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          url = endpoints.GET_ADACCOUNTS(fbId);\n          headers = {\n            'Authorization': token\n          };\n          params = {\n            fbId: fbId\n          };\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers,\n            params: params\n          }));\n\n        case 5:\n          res = _context8.sent;\n          return _context8.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fbPaginate = function fbPaginate(page) {\n  var res;\n  return _regeneratorRuntime.async(function fbPaginate$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(page));\n\n        case 2:\n          res = _context9.sent;\n          return _context9.abrupt(\"return\", res.data);\n\n        case 4:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCampaigns = function getCampaigns(accountId, token) {\n  var url, headers, res;\n  return _regeneratorRuntime.async(function getCampaigns$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          url = endpoints.GET_CAMPAIGNS(accountId);\n          headers = {\n            'Authorization': token\n          };\n          _context10.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers\n          }));\n\n        case 4:\n          res = _context10.sent;\n          return _context10.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getAdsets = function getAdsets(camaignId, token) {\n  var url, headers, res;\n  return _regeneratorRuntime.async(function getAdsets$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          url = endpoints.GET_ADSETS(camaignId);\n          headers = {\n            'Authorization': token\n          };\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers\n          }));\n\n        case 4:\n          res = _context11.sent;\n          return _context11.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getAds = function getAds(adsetId, token) {\n  var url, headers, res;\n  return _regeneratorRuntime.async(function getAds$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          url = endpoints.GET_ADS(adsetId);\n          headers = {\n            'Authorization': token\n          };\n          _context12.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers\n          }));\n\n        case 4:\n          res = _context12.sent;\n          return _context12.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getInterestStats = function getInterestStats(adId, token) {\n  var url, headers, res;\n  return _regeneratorRuntime.async(function getInterestStats$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          url = endpoints.GET_STATS(adId);\n          headers = {\n            'Authorization': token\n          };\n          _context13.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers\n          }));\n\n        case 4:\n          res = _context13.sent;\n          return _context13.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var userLogout = function userLogout(token) {\n  var url, headers, res;\n  return _regeneratorRuntime.async(function userLogout$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          console.log('user token', token);\n          url = endpoints.LOG_OUT;\n          console.log('url', url);\n          headers = {\n            'Authorization': token\n          };\n          _context14.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: headers\n          }));\n\n        case 6:\n          res = _context14.sent;\n          console.log('res', res);\n          return _context14.abrupt(\"return\", res.data);\n\n        case 9:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":null,"metadata":{},"sourceType":"module"}