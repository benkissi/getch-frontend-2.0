{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleWare();\nsagaMiddleware.run(rootSaga);\nconst middlewares = [sagaMiddleware];\n\nif (true) {\n  middlewares.push(logger);\n}\n\nexport const initStore = (initialState = {}) => {\n  return createStore(rootReducer, applyMiddleware(...middlewares));\n};\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/code/ben/getch/frontend/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleWare","persistStore","rootReducer","rootSaga","sagaMiddleware","run","middlewares","push","initStore","initialState","persistor","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AACAI,cAAc,CAACC,GAAf,CAAmBF,QAAnB;AAEA,MAAMG,WAAW,GAAG,CAACF,cAAD,CAApB;;AAEA,UAA4C;AAC1CE,EAAAA,WAAW,CAACC,IAAZ,CAAiBR,MAAjB;AACD;;AAED,OAAO,MAAMS,SAAS,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAC9C,SAAOZ,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAlB;AACD,CAFM;AAIP,OAAO,MAAMI,SAAS,GAAGT,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleWare from \"redux-saga\";\n\nimport { persistStore } from \"redux-persist\";\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleWare();\nsagaMiddleware.run(rootSaga);\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const initStore = (initialState = {}) => {\n  return createStore(rootReducer, applyMiddleware(...middlewares));\n};\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}