{"ast":null,"code":"export const addScore = (data, score) => {\n  const updated = data.map(item => {\n    if (item.hasOwnProperty('relevance')) {\n      return item.relevance = item.relevance + score;\n    }\n\n    item['relevance'] = score;\n    return item;\n  });\n  return updated;\n};\nexport const getInterestNames = data => {\n  const names = data.map(item => {\n    return item.name;\n  });\n  return names;\n};\nexport const containsKeyword = (key, phrase) => {\n  const lowerPhrase = phrase.toLowerCase();\n  const lowerKey = key.toLowerCase();\n  return lowerPhrase.indexOf(lowerKey);\n};\nexport const splitArray = (array, size) => {\n  const length = array.length;\n  const setNumber = Math.ceil(length / size);\n  let limit = size;\n  let start = 0;\n  let arraySplit = [];\n\n  for (let i = 0; i < setNumber; i++) {\n    const set = array.slice(start, limit);\n    arraySplit.push(set);\n    limit = limit + size;\n    start = start + size;\n  }\n\n  return arraySplit;\n};\n\nconst checkForKeyword = () => {};","map":{"version":3,"sources":["/code/ben/getch/frontend/utils/search.js"],"names":["addScore","data","score","updated","map","item","hasOwnProperty","relevance","getInterestNames","names","name","containsKeyword","key","phrase","lowerPhrase","toLowerCase","lowerKey","indexOf","splitArray","array","size","length","setNumber","Math","ceil","limit","start","arraySplit","i","set","slice","push","checkForKeyword"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,QAAMC,OAAO,GAAGF,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAC7B,QAAGA,IAAI,CAACC,cAAL,CAAoB,WAApB,CAAH,EAAoC;AAChC,aAAOD,IAAI,CAACE,SAAL,GAAiBF,IAAI,CAACE,SAAL,GAAiBL,KAAzC;AACH;;AACDG,IAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoBH,KAApB;AACA,WAAOG,IAAP;AACH,GANe,CAAhB;AAQA,SAAOF,OAAP;AACH,CAVM;AAYP,OAAO,MAAMK,gBAAgB,GAAIP,IAAD,IAAU;AACtC,QAAMQ,KAAK,GAAGR,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAC3B,WAAOA,IAAI,CAACK,IAAZ;AACH,GAFa,CAAd;AAIA,SAAOD,KAAP;AACH,CANM;AAQP,OAAO,MAAME,eAAe,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C,QAAMC,WAAW,GAAGD,MAAM,CAACE,WAAP,EAApB;AACA,QAAMC,QAAQ,GAAGJ,GAAG,CAACG,WAAJ,EAAjB;AAEA,SAAOD,WAAW,CAACG,OAAZ,CAAoBD,QAApB,CAAP;AACH,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvC,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,MAAM,GAACD,IAAjB,CAAlB;AACA,MAAIK,KAAK,GAAGL,IAAZ;AACA,MAAIM,KAAK,GAAG,CAAZ;AACA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,SAAnB,EAA8BM,CAAC,EAA/B,EAAkC;AAC9B,UAAMC,GAAG,GAAGV,KAAK,CAACW,KAAN,CAAYJ,KAAZ,EAAmBD,KAAnB,CAAZ;AACAE,IAAAA,UAAU,CAACI,IAAX,CAAgBF,GAAhB;AACAJ,IAAAA,KAAK,GAAGA,KAAK,GAAGL,IAAhB;AACAM,IAAAA,KAAK,GAAGA,KAAK,GAAGN,IAAhB;AACH;;AACD,SAAOO,UAAP;AACH,CAdM;;AAgBP,MAAMK,eAAe,GAAE,MAAM,CAE5B,CAFD","sourcesContent":["export const addScore = (data, score) => {\n    const updated = data.map(item => {\n        if(item.hasOwnProperty('relevance')){\n            return item.relevance = item.relevance + score\n        }\n        item['relevance'] = score\n        return item\n    })\n\n    return updated\n}\n\nexport const getInterestNames = (data) => {\n    const names = data.map(item => {\n        return item.name\n    })\n\n    return names\n}\n\nexport const containsKeyword = (key, phrase) => {\n    const lowerPhrase = phrase.toLowerCase()\n    const lowerKey = key.toLowerCase()\n\n    return lowerPhrase.indexOf(lowerKey)\n}\n\nexport const splitArray = (array, size) => {\n    const length = array.length\n    const setNumber = Math.ceil(length/size)\n    let limit = size\n    let start = 0\n    let arraySplit = []\n\n    for(let i = 0; i < setNumber; i++){\n        const set = array.slice(start, limit)\n        arraySplit.push(set)\n        limit = limit + size\n        start = start + size\n    }\n    return arraySplit\n}\n\nconst checkForKeyword =() => {\n    \n}"]},"metadata":{},"sourceType":"module"}