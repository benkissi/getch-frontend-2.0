{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleWare();\nconst middlewares = [sagaMiddleware];\n\nif (true) {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\npersistStore(store);\n\nconst makeStore = initialState => {\n  return store;\n};\n\nexport default makeStore;","map":{"version":3,"sources":["/code/ben/getch/frontend/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleWare","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","push","store","run","makeStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEE,UAA4C;AAC1CC,EAAAA,WAAW,CAACC,IAAZ,CAAiBP,MAAjB;AACD;;AAED,MAAMQ,KAAK,GAAGV,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AACAD,cAAc,CAACI,GAAf,CAAmBL,QAAnB;AAEAF,YAAY,CAACM,KAAD,CAAZ;;AAEF,MAAME,SAAS,GAAIC,YAAD,IAAkB;AAClC,SAAOH,KAAP;AACD,CAFD;;AAIA,eAAeE,SAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleWare from \"redux-saga\";\n\nimport { persistStore } from \"redux-persist\";\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleWare();\n\nconst middlewares = [sagaMiddleware];\n\n  if (process.env.NODE_ENV === \"development\") {\n    middlewares.push(logger);\n  }\n\n  const store = createStore(rootReducer, applyMiddleware(...middlewares));\n  sagaMiddleware.run(rootSaga);\n\n  persistStore(store);\n\nconst makeStore = (initialState) => {\n  return store\n}\n\nexport default makeStore\n\n"]},"metadata":{},"sourceType":"module"}