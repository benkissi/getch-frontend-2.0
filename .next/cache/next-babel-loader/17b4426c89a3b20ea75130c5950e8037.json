{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { chartData } from \"../utils/table\";\nimport Table from \"../components/table\";\nimport AdAccount from \"../components/adAccount\";\nimport { performanceColumns } from \"../utils/table\";\nimport { truncate } from \"../utils/common\";\nimport { getAdAccounts, fbPaginate, getCampaigns, getAdsets, getAds, getInterestStats } from \"../api/api\";\n\nfunction Performance(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    accountModalVisible: false,\n    campaignModalVisible: false,\n    selectedRowKeys: null,\n    pagingAccounts: {\n      next: \"\",\n      previous: \"\"\n    },\n    pagingCampaigns: {\n      next: \"\",\n      previous: \"\"\n    },\n    selectedAdAccount: {},\n    selectedCampaign: {},\n    selectedAdset: {},\n    selectedAd: {},\n    fetchingCampaigns: false,\n    fetchingAdsets: false\n  });\n  const {\n    fbId,\n    user\n  } = props;\n  useEffect(() => {\n    if (false) {\n      console.log(\"on browser\");\n\n      const {\n        Column\n      } = require(\"@antv/g2plot\");\n\n      const chart = new Column(document.getElementById(\"chart\"), {\n        data: chartData,\n        xField: \"name\",\n        yField: \"value\",\n        padding: \"auto\",\n        title: {\n          visible: true,\n          text: \"Interest stats\"\n        },\n        forceFit: true\n      });\n      console.log(\"el\", document.getElementById(\"chart\"));\n      chart.render();\n    }\n  }, []);\n  useEffect(() => {\n    if (state.accountModalVisible) {\n      fetchAdAccounts();\n    }\n  }, [state.accountModalVisible]);\n  useEffect(() => {\n    if (state.selectedAdAccount.id) {\n      setModalVisible(false, \"accountModalVisible\");\n      fetchCampaigns();\n    }\n  }, [state.selectedAdAccount]);\n  useEffect(() => {\n    if (state.selectedCampaign.id) {\n      fetchAdsets();\n    }\n  }, [state.selectedCampaign]);\n  useEffect(() => {\n    if (state.selectedAdset.id) {\n      fetchAds();\n    }\n  }, [state.selectedAdset]);\n  useEffect(() => {\n    if (state.selectedAd.id) {\n      fetchStats();\n    }\n  }, [state.selectedAd]);\n\n  const setModalVisible = (status, modalName) => {\n    setState(prevState => _objectSpread({}, prevState, {\n      [modalName]: status\n    }));\n  };\n\n  const setCampaignsModal = modalVisible => {\n    setState(prevState => _objectSpread({}, prevState, {\n      campaignModalVisible: modalVisible\n    }));\n  };\n\n  const fetchAdAccounts = async () => {\n    if (state.accountModalVisible) {\n      console.log(\"fetch ad accounts\");\n      const adAccounts = await getAdAccounts(fbId, user.xToken);\n      console.log(\"AD accoutns\", adAccounts);\n      setState(prevState => _objectSpread({}, prevState, {\n        adAccounts: adAccounts,\n        pagingAccounts: {\n          next: adAccounts.paging.next && adAccounts.paging.next,\n          previous: adAccounts.paging.previous && adAccounts.paging.previous\n        },\n        selectedAdAccount: {},\n        selectedCampaign: {},\n        selectedAdset: {}\n      }));\n    }\n  };\n\n  const fetchCampaigns = async () => {\n    setState(prevState => _objectSpread({}, prevState, {\n      fetchingCampaigns: true,\n      selectedCampaign: {}\n    }));\n    const accountId = state.selectedAdAccount.id;\n    const res = await getCampaigns(accountId, user.xToken);\n    setState(prevState => _objectSpread({}, prevState, {\n      campaigns: res,\n      fetchingCampaigns: false,\n      pagingCampaigns: {\n        next: res.paging && res.paging.next,\n        previous: res.paging && res.paging.previous\n      }\n    }));\n  };\n\n  const fetchAdsets = async () => {\n    setState(prevState => _objectSpread({}, prevState, {\n      fetchingAdsets: true,\n      selectedAdset: {}\n    }));\n    const campaignId = state.selectedCampaign.id;\n    const res = await getAdsets(campaignId, user.xToken);\n    console.log(\"sets\", res.data);\n    setState(prevState => _objectSpread({}, prevState, {\n      adsets: res,\n      fetchingAdsets: false\n    }));\n  };\n\n  const fetchAds = async () => {\n    setState(prevState => _objectSpread({}, prevState, {\n      fetchingAds: true\n    }));\n    const adsetId = state.selectedAdset.id;\n    const res = await getAds(adsetId, user.xToken);\n    console.log(\"ads\", res);\n    setState(prevState => _objectSpread({}, prevState, {\n      ads: res,\n      fetchingAds: false\n    }));\n  };\n\n  const fetchStats = async () => {\n    setState(prevState => _objectSpread({}, prevState, {\n      fetchingStats: true\n    }));\n    const adId = state.selectedAd.id;\n    const res = await getInterestStats(adId, user.xToken);\n    console.log(\"stats\", res);\n  };\n\n  const handleAccountPagination = async page => {\n    const adAccounts = await fbPaginate(page);\n    console.log(\"paginate\", adAccounts);\n    setState(prevState => _objectSpread({}, prevState, {\n      adAccounts: adAccounts,\n      pagingAccounts: {\n        next: adAccounts.paging && adAccounts.paging.next,\n        previous: adAccounts.paging && adAccounts.paging.previous\n      }\n    }));\n  };\n\n  const handleCampaignPagination = async page => {\n    const campaigns = await fbPaginate(page);\n    console.log(\"paginate\", campaigns);\n    setState(prevState => _objectSpread({}, prevState, {\n      campaigns: campaigns,\n      pagingCampaigns: {\n        next: campaigns.paging && campaigns.paging.next,\n        previous: campaigns.paging && campaigns.paging.previous\n      }\n    }));\n  };\n\n  const onSelectionChange = (selectedRowKeys, selectedRows) => {\n    console.log(\"rows\", selectedRows);\n    const selectedInterest = selectedRows.map(interest => {\n      return interest.name;\n    });\n    setState(prevState => _objectSpread({}, prevState, {\n      selectedRowKeys,\n      selectedInterest,\n      selectedRows\n    }));\n  };\n\n  const handleAccountSelect = (id, name) => {\n    setState(prevState => _objectSpread({}, prevState, {\n      selectedAdAccount: {\n        id,\n        name\n      }\n    }));\n  };\n\n  const handleCampaignSelect = (id, name) => {\n    setState(prevState => _objectSpread({}, prevState, {\n      selectedCampaign: {\n        id,\n        name\n      },\n      campaignModalVisible: false\n    }));\n  };\n\n  const handleAdsetSelect = (value, option) => {\n    console.log(\"selected\", option.props.children);\n    setState(prevState => _objectSpread({}, prevState, {\n      selectedAdset: {\n        id: option.props.value,\n        name: option.props.children\n      }\n    }));\n  };\n\n  const handleAdSelect = (value, option) => {\n    setState(prevState => _objectSpread({}, prevState, {\n      selectedAd: {\n        id: option.props.value,\n        name: option.props.children\n      }\n    }));\n  };\n\n  const {\n    Option\n  } = _Select;\n  const {\n    selectedRowKeys\n  } = state;\n  return __jsx(\"div\", {\n    id: \"performance\",\n    className: \"jsx-290073997\"\n  }, __jsx(_Row, {\n    gutter: 16,\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(_Col, {\n    span: 4\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"selection\"\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"button item\"\n  }, __jsx(_Button, {\n    style: {\n      textAlign: \"left\"\n    },\n    className: \"modalButtons\",\n    onClick: () => setModalVisible(true, \"accountModalVisible\"),\n    block: true\n  }, state.selectedAdAccount.name ? truncate(state.selectedAdAccount.name, 30) : \"Select Ad Account\")), __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"select item\"\n  }, __jsx(_Button, {\n    style: {\n      textAlign: \"left\"\n    },\n    onClick: () => setCampaignsModal(true),\n    block: true,\n    loading: state.fetchingCampaigns,\n    disabled: !!!state.selectedAdAccount.name\n  }, state.selectedCampaign.name ? truncate(state.selectedCampaign.name, 30) : \"Select Campaign\")), __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"select item\"\n  }, __jsx(_Select, {\n    disabled: !!!state.selectedCampaign.name,\n    value: state.selectedAdset.name ? state.selectedAdset.name : \"Select Adset\",\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Select Adset\",\n    loading: state.fetchingAdsets,\n    showSearch: true,\n    optionFilterProp: \"children\",\n    onSelect: handleAdsetSelect,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n  }, state.adsets ? state.adsets.data.map((item, index) => {\n    return __jsx(Option, {\n      value: item.id,\n      key: index\n    }, item.name);\n  }) : \"\")), __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"select item\"\n  }, __jsx(_Select, {\n    disabled: !!!state.selectedAdset.name,\n    style: {\n      width: \"100%\"\n    },\n    value: state.selectedAd.name ? state.selectedAd.name : \"Select Ad\",\n    placeholder: \"Select ad\",\n    showSearch: true,\n    optionFilterProp: \"children\",\n    onSelect: handleAdSelect,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n  }, state.ads ? state.ads.data.map((item, index) => {\n    return __jsx(Option, {\n      value: item.id,\n      key: index\n    }, item.name);\n  }) : \"\")))), __jsx(_Col, {\n    span: 20\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"stats\"\n  }, __jsx(\"div\", {\n    id: \"chart\",\n    className: \"jsx-290073997\"\n  }), __jsx(\"div\", {\n    className: \"jsx-290073997\"\n  }, __jsx(Table, {\n    columns: performanceColumns,\n    onSelection: onSelectionChange,\n    selectedRowKeys: selectedRowKeys,\n    className: \"table\"\n  }))))), __jsx(_Modal, {\n    title: \"Select an Ad account\",\n    centered: true,\n    visible: state.accountModalVisible,\n    onOk: () => setModalVisible(false, \"accountModalVisible\"),\n    onCancel: () => setModalVisible(false, \"accountModalVisible\"),\n    okText: \"Next\",\n    cancelText: \"Previous\",\n    okButtonProps: {\n      disabled: !!!state.pagingAccounts.next,\n      onClick: () => handleAccountPagination(state.pagingAccounts.next)\n    },\n    cancelButtonProps: {\n      disabled: !!!state.pagingAccounts.previous,\n      onClick: () => handleAccountPagination(state.pagingAccounts.previous)\n    },\n    width: 1300\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"adAccounts\"\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"inner\"\n  }, state.adAccounts ? state.adAccounts.data.map((item, index) => __jsx(\"div\", {\n    key: index,\n    className: \"jsx-290073997\" + \" \" + \"account\"\n  }, __jsx(AdAccount, {\n    name: item.name,\n    accountId: item.id,\n    status: item.account_status,\n    onSelect: handleAccountSelect\n  }))) : \"Loading...\"))), __jsx(_Modal, {\n    title: \"Select a campaign\",\n    centered: true,\n    visible: state.campaignModalVisible,\n    onOk: () => setCampaignsModal(false, \"campaignModalVisible\"),\n    onCancel: () => setCampaignsModal(false, \"campaignModalVisible\"),\n    okText: \"Next\",\n    cancelText: \"Previous\",\n    okButtonProps: {\n      disabled: !!!state.pagingCampaigns.next,\n      onClick: () => handleCampaignPagination(state.pagingCampaigns.next)\n    },\n    cancelButtonProps: {\n      disabled: !!!state.pagingCampaigns.previous,\n      onClick: () => handleCampaignPagination(state.pagingCampaigns.previous)\n    },\n    width: 1300\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"adAccounts\"\n  }, __jsx(\"div\", {\n    className: \"jsx-290073997\" + \" \" + \"inner\"\n  }, state.campaigns ? state.campaigns.data.map((item, index) => __jsx(\"div\", {\n    key: index,\n    className: \"jsx-290073997\" + \" \" + \"account\"\n  }, __jsx(AdAccount, {\n    name: item.name,\n    accountId: item.id // status={item.account_status}\n    ,\n    onSelect: handleCampaignSelect\n  }))) : \"Loading...\"))), __jsx(_JSXStyle, {\n    id: \"290073997\"\n  }, [\"#performance.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;margin-top:70px;width:100%;}\", \".selection.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border:1px solid #ccc;border-radius:4px;height:auto;padding:10px;}\", \".item.jsx-290073997{margin-bottom:30px;width:100%;}\", \".stats.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".adAccounts.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".adAccounts.jsx-290073997 .inner.jsx-290073997{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:90%;}\", \".account.jsx-290073997{min-width:20%;margin:10px;}\"]));\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.currentUser,\n  fbId: state.user.fbToken.fbId\n});\n\nexport default connect(mapStateToProps)(Performance);","map":null,"metadata":{},"sourceType":"module"}