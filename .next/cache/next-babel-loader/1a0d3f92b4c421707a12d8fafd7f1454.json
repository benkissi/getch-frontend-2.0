{"ast":null,"code":"import axios from \"axios\";\nimport endpoints from \"./endpoints\";\nimport { splitArray } from \"../utils/search\";\nexport const signUp = async (email, password) => {\n  const url = endpoints.SIGN_UP;\n  const data = {\n    email,\n    password\n  };\n  const res = await axios.post(url, data);\n  const token = res.headers[\"x-auth\"].replace(\"Bearer \", \"\");\n  res.data[\"xToken\"] = token;\n  return res.data;\n};\nexport const signIn = async (email, password) => {\n  console.log(\"sign in api\");\n  const url = endpoints.SIGN_IN;\n  const params = {\n    email,\n    password\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  const token = res.headers[\"x-auth\"].replace(\"Bearer \", \"\");\n  res.data[\"xToken\"] = token;\n  return res.data;\n};\nexport const fbAuthentication = async (token, id, fbId, name) => {\n  const url = endpoints.FB_AUTH;\n  const params = {\n    token,\n    id,\n    fbId,\n    name\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const searchInterest = async (token, keyword, limit = 500) => {\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    q: keyword,\n    type: \"adinterest\",\n    access_token: token,\n    limit\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n  var _response, _response$data, _response$data$data;\n\n  let interestSuggestions = [];\n  let response;\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    interest_list: keywords,\n    type: \"adinterestsuggestion\",\n    access_token: token,\n    limit: limit\n  };\n  response = await axios.get(url, {\n    params\n  });\n  if (!((_response = response) !== null && _response !== void 0 && (_response$data = _response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.next)) return interestSuggestions;\n  interestSuggestions.push(...response.data.data);\n  let page = 0;\n\n  while (response.data.paging.next) {\n    if (page > 5) {\n      break;\n    }\n\n    response = await axios.get(response.data.paging.next);\n    interestSuggestions.push(...response.data.data);\n    page++;\n  }\n\n  return interestSuggestions;\n};\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n  if (keywords.length > 40) {\n    // let suggestions = [];\n    // const dataArray = splitArray(keywords, 100);\n    // for (let i = 0; i < dataArray.length; i++) {\n    //   suggestions.push(\n    //     ...(await getInterestSuggestions(token, dataArray[i], limit))\n    //   );\n    // }\n    // return suggestions;\n    return await getInterestSuggestions(token, keywords.slice(0, 40), limit);\n  }\n\n  return await getInterestSuggestions(token, keywords, limit);\n};\nexport const getProducts = async shopName => {\n  const url = endpoints.GET_PRODUCTS(shopName);\n  const params = {\n    limit: 10\n  };\n  const res = await axios.get(url, {\n    params\n  });\n};\nexport const getAdAccounts = async (fbId, token) => {\n  const url = endpoints.GET_ADACCOUNTS(fbId);\n  const headers = {\n    Authorization: token\n  };\n  const params = {\n    fbId\n  };\n  const res = await axios.get(url, {\n    headers,\n    params\n  });\n  return res.data;\n};\nexport const fbPaginate = async page => {\n  const res = await axios.get(page);\n  return res.data;\n};\nexport const getCampaigns = async (accountId, token) => {\n  const url = endpoints.GET_CAMPAIGNS(accountId);\n  const headers = {\n    Authorization: token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getAdsets = async (camaignId, token) => {\n  const url = endpoints.GET_ADSETS(camaignId);\n  const headers = {\n    Authorization: token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getAds = async (adsetId, token) => {\n  const url = endpoints.GET_ADS(adsetId);\n  const headers = {\n    Authorization: token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getInterestStats = async (adId, token) => {\n  const url = endpoints.GET_STATS(adId);\n  const headers = {\n    Authorization: token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const userLogout = async token => {\n  const url = endpoints.LOG_OUT;\n  const headers = {\n    Authorization: token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const updateSearchCount = async token => {\n  const url = endpoints.UPDATE_SEARCH_COUNT;\n  const headers = {\n    Authorization: token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const verifyPayment = async (token, plan, ref) => {\n  const url = endpoints.VERIFY_PAYMENT;\n  const headers = {\n    Authorization: token\n  };\n  const data = {\n    plan,\n    ref\n  };\n  const res = await axios.post(url, data, {\n    headers\n  });\n  return res.data;\n};","map":{"version":3,"sources":["/home/ben/code/million/getch-frontend-2.0/api/api.js"],"names":["axios","endpoints","splitArray","signUp","email","password","url","SIGN_UP","data","res","post","token","headers","replace","signIn","console","log","SIGN_IN","params","get","fbAuthentication","id","fbId","name","FB_AUTH","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","response","interest_list","next","push","page","paging","compileInterestSuggestions","length","slice","getProducts","shopName","GET_PRODUCTS","getAdAccounts","GET_ADACCOUNTS","Authorization","fbPaginate","getCampaigns","accountId","GET_CAMPAIGNS","getAdsets","camaignId","GET_ADSETS","getAds","adsetId","GET_ADS","getInterestStats","adId","GET_STATS","userLogout","LOG_OUT","updateSearchCount","UPDATE_SEARCH_COUNT","verifyPayment","plan","ref","VERIFY_PAYMENT"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from \"./endpoints\";\nimport { splitArray } from \"../utils/search\";\n\nexport const signUp = async (email, password) => {\n  const url = endpoints.SIGN_UP;\n  const data = {\n    email,\n    password,\n  };\n\n  const res = await axios.post(url, data);\n  const token = res.headers[\"x-auth\"].replace(\"Bearer \", \"\");\n  res.data[\"xToken\"] = token;\n  return res.data;\n};\n\nexport const signIn = async (email, password) => {\n  console.log(\"sign in api\");\n  const url = endpoints.SIGN_IN;\n  const params = {\n    email,\n    password,\n  };\n\n  const res = await axios.get(url, {\n    params,\n  });\n  const token = res.headers[\"x-auth\"].replace(\"Bearer \", \"\");\n  res.data[\"xToken\"] = token;\n  return res.data;\n};\n\nexport const fbAuthentication = async (token, id, fbId, name) => {\n  const url = endpoints.FB_AUTH;\n  const params = {\n    token,\n    id,\n    fbId,\n    name,\n  };\n\n  const res = await axios.get(url, {\n    params,\n  });\n\n  return res.data;\n};\n\nexport const searchInterest = async (token, keyword, limit = 500) => {\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    q: keyword,\n    type: \"adinterest\",\n    access_token: token,\n    limit,\n  };\n  const res = await axios.get(url, {\n    params,\n  });\n  return res.data;\n};\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n  let interestSuggestions = [];\n  let response;\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  \n  const params = {\n    interest_list: keywords,\n    type: \"adinterestsuggestion\",\n    access_token: token,\n    limit: limit,\n  };\n  response = await axios.get(url, {\n    params,\n  });\n  if(!response?.data?.data?.next) return interestSuggestions\n  interestSuggestions.push(...response.data.data);\n  let page = 0;\n  while (response.data.paging.next) {\n    if (page > 5) {\n      break;\n    }\n    response = await axios.get(response.data.paging.next);\n    interestSuggestions.push(...response.data.data);\n    page++;\n  }\n  return interestSuggestions;\n};\n\nexport const compileInterestSuggestions = async (\n  token,\n  keywords,\n  limit = 100\n) => {\n  if (keywords.length > 40) {\n    // let suggestions = [];\n    // const dataArray = splitArray(keywords, 100);\n    // for (let i = 0; i < dataArray.length; i++) {\n    //   suggestions.push(\n    //     ...(await getInterestSuggestions(token, dataArray[i], limit))\n    //   );\n    // }\n    // return suggestions;\n    return await getInterestSuggestions(token, keywords.slice(0, 40), limit)\n  }\n\n  return await getInterestSuggestions(token, keywords, limit);\n};\n\nexport const getProducts = async (shopName) => {\n  const url = endpoints.GET_PRODUCTS(shopName);\n  const params = {\n    limit: 10,\n  };\n  const res = await axios.get(url, {\n    params,\n  });\n};\n\nexport const getAdAccounts = async (fbId, token) => {\n  const url = endpoints.GET_ADACCOUNTS(fbId);\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const params = {\n    fbId,\n  };\n\n  const res = await axios.get(url, {\n    headers,\n    params,\n  });\n\n  return res.data;\n};\n\nexport const fbPaginate = async (page) => {\n  const res = await axios.get(page);\n  return res.data;\n};\n\nexport const getCampaigns = async (accountId, token) => {\n  const url = endpoints.GET_CAMPAIGNS(accountId);\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const res = await axios.get(url, {\n    headers,\n  });\n\n  return res.data;\n};\n\nexport const getAdsets = async (camaignId, token) => {\n  const url = endpoints.GET_ADSETS(camaignId);\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const res = await axios.get(url, {\n    headers,\n  });\n\n  return res.data;\n};\n\nexport const getAds = async (adsetId, token) => {\n  const url = endpoints.GET_ADS(adsetId);\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const res = await axios.get(url, {\n    headers,\n  });\n\n  return res.data;\n};\n\nexport const getInterestStats = async (adId, token) => {\n  const url = endpoints.GET_STATS(adId);\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const res = await axios.get(url, {\n    headers,\n  });\n\n  return res.data;\n};\n\nexport const userLogout = async (token) => {\n  const url = endpoints.LOG_OUT;\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const res = await axios.get(url, {\n    headers,\n  });\n\n  return res.data;\n};\n\nexport const updateSearchCount = async (token) => {\n  const url = endpoints.UPDATE_SEARCH_COUNT;\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const res = await axios.get(url, { headers });\n  return res.data;\n};\n\nexport const verifyPayment = async (token, plan, ref) => {\n  const url = endpoints.VERIFY_PAYMENT;\n\n  const headers = {\n    Authorization: token,\n  };\n\n  const data = {\n    plan,\n    ref,\n  };\n\n  const res = await axios.post(url, data, { headers });\n  return res.data;\n};\n"]},"metadata":{},"sourceType":"module"}