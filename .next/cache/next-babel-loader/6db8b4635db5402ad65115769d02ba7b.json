{"ast":null,"code":"import axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport const signUp = async (email, password) => {\n  console.log('getting', email, password);\n  const url = endpoints.SIGN_UP;\n  const data = {\n    email,\n    password\n  };\n  const res = await axios.post(url, data);\n  const token = res.headers['x-auth'].replace('Bearer ', '');\n  res.data['xToken'] = token;\n  return res.data;\n};\nexport const signIn = async (email, password) => {\n  console.log('sign in api');\n  const url = endpoints.SIGN_IN;\n  const query = {\n    email,\n    password\n  };\n  console.log('api', query);\n  const res = await axios.get(url, params);\n  const token = res.headers['x-auth'].replace('Bearer ', '');\n  res.data['xToken'] = token;\n  return res.data;\n};\nexport const fbAuthentication = async (token, id, fbId) => {\n  const url = endpoints.FB_AUTH;\n  const params = {\n    token,\n    id,\n    fbId\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const searchInterest = async (token, keyword, limit = 500) => {\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    q: keyword,\n    type: 'adinterest',\n    access_token: token,\n    limit\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  return res.data;\n};\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n  let interestSuggestions = [];\n  let response;\n  const url = endpoints.FB_INTEREST_SEARCH(2.11);\n  const params = {\n    interest_list: keywords,\n    type: 'adinterestsuggestion',\n    access_token: token,\n    limit: limit\n  };\n  response = await axios.get(url, {\n    params\n  });\n  interestSuggestions.push(...response.data.data);\n  let page = 0;\n\n  while (response.data.paging.next) {\n    if (page > 5) {\n      break;\n    }\n\n    response = await axios.get(response.data.paging.next);\n    interestSuggestions.push(...response.data.data);\n    page++;\n  }\n\n  return interestSuggestions;\n};\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n  if (keywords.length > 200) {\n    let suggestions = [];\n    const dataArray = splitArray(keywords, 200);\n\n    for (let i = 0; i < dataArray.length; i++) {\n      suggestions.push(...(await getInterestSuggestions(token, dataArray[i], limit)));\n    }\n\n    return suggestions;\n  }\n\n  return await getInterestSuggestions(token, keywords, limit);\n};\nexport const getProducts = async shopName => {\n  const url = endpoints.GET_PRODUCTS(shopName);\n  const params = {\n    limit: 10\n  };\n  const res = await axios.get(url, {\n    params\n  });\n  console.log(res.data);\n};\nexport const getAdAccounts = async (fbId, token) => {\n  const url = endpoints.GET_ADACCOUNTS(fbId);\n  const headers = {\n    'Authorization': token\n  };\n  const params = {\n    fbId\n  };\n  const res = await axios.get(url, {\n    headers,\n    params\n  });\n  return res.data;\n};\nexport const fbPaginate = async page => {\n  const res = await axios.get(page);\n  return res.data;\n};\nexport const getCampaigns = async (accountId, token) => {\n  const url = endpoints.GET_CAMPAIGNS(accountId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getAdsets = async (camaignId, token) => {\n  const url = endpoints.GET_ADSETS(camaignId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getAds = async (adsetId, token) => {\n  const url = endpoints.GET_ADS(adsetId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};\nexport const getInterestStats = async (adId, token) => {\n  const url = endpoints.GET_STATS(adId);\n  const headers = {\n    'Authorization': token\n  };\n  const res = await axios.get(url, {\n    headers\n  });\n  return res.data;\n};","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/api/api.js"],"names":["axios","endpoints","splitArray","signUp","email","password","console","log","url","SIGN_UP","data","res","post","token","headers","replace","signIn","SIGN_IN","query","get","params","fbAuthentication","id","fbId","FB_AUTH","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interestSuggestions","response","interest_list","push","page","paging","next","compileInterestSuggestions","length","suggestions","dataArray","i","getProducts","shopName","GET_PRODUCTS","getAdAccounts","GET_ADACCOUNTS","fbPaginate","getCampaigns","accountId","GET_CAMPAIGNS","getAdsets","camaignId","GET_ADSETS","getAds","adsetId","GET_ADS","getInterestStats","adId","GET_STATS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const signUp = async (email, password) =>{\n    console.log('getting', email, password)\n    const url = endpoints.SIGN_UP\n    const data = {\n        email,\n        password\n    }\n\n    const res = await axios.post(url, data)\n    const token = res.headers['x-auth'].replace('Bearer ', '')\n    res.data['xToken'] = token\n    return res.data\n}\n\nexport const signIn = async (email, password) => {\n    console.log('sign in api')\n    const url = endpoints.SIGN_IN\n    const query = {\n        email,\n        password\n    }\n    console.log('api',query)\n\n    const res = await axios.get(url, params)\n    const token = res.headers['x-auth'].replace('Bearer ', '')\n    res.data['xToken'] = token\n    return res.data\n}\n\nexport const fbAuthentication = async (token, id, fbId) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id, \n        fbId\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 500) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    let interestSuggestions = []\n    let response\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    response = await axios.get(url, {\n        params\n    })\n    interestSuggestions.push(...response.data.data)\n    let page = 0;\n    while(response.data.paging.next){\n        if(page > 5){\n            break\n        }\n        response = await axios.get(response.data.paging.next);\n        interestSuggestions.push(...response.data.data);\n        page++\n    }\n    return interestSuggestions\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    \n    if(keywords.length > 200){\n        let suggestions = []\n        const dataArray = splitArray(keywords, 200)\n        for(let i=0; i< dataArray.length; i++){\n            suggestions.push(...await getInterestSuggestions(token, dataArray[i], limit))\n        }\n        return suggestions\n    }\n\n    return await getInterestSuggestions(token, keywords, limit)\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}\n\nexport const getAdAccounts = async (fbId, token) => {\n    const url = endpoints.GET_ADACCOUNTS(fbId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const params = {\n        fbId\n    }\n\n    const res = await axios.get(url,{\n        headers,\n        params\n    })\n\n    return res.data\n}\n\nexport const fbPaginate = async (page) => {\n    const res =  await axios.get(page)\n    return res.data\n}\n\nexport const getCampaigns = async (accountId, token) => {\n    const url = endpoints.GET_CAMPAIGNS(accountId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport const getAdsets = async (camaignId, token) => {\n    const url = endpoints.GET_ADSETS(camaignId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport const getAds = async (adsetId, token) => {\n    const url = endpoints.GET_ADS(adsetId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\nexport const getInterestStats = async (adId, token) => {\n    const url = endpoints.GET_STATS(adId)\n\n    const headers = {\n        'Authorization': token\n    }\n\n    const res = await axios.get(url,{\n        headers\n    })\n\n    return res.data\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}