{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nimport endpoints from './endpoints';\nimport { splitArray } from '../utils/search';\nexport var fbAuthentication = function fbAuthentication(token, id) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function fbAuthentication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = endpoints.FB_AUTH;\n          params = {\n            token: token,\n            id: id\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var searchInterest = function searchInterest(token, keyword) {\n  var limit,\n      url,\n      params,\n      res,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function searchInterest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          limit = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 200;\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            q: keyword,\n            type: 'adinterest',\n            access_token: token,\n            limit: limit\n          };\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 5:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getInterestSuggestions = function getInterestSuggestions(token, keywords) {\n  var limit,\n      url,\n      params,\n      res,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function getInterestSuggestions$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          limit = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 100;\n          url = endpoints.FB_INTEREST_SEARCH(2.11);\n          params = {\n            interest_list: keywords,\n            type: 'adinterestsuggestion',\n            access_token: token,\n            limit: limit\n          };\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 5:\n          res = _context3.sent;\n          return _context3.abrupt(\"return\", res.data);\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var compileInterestSuggestions = function compileInterestSuggestions(token, keywords) {\n  var limit,\n      dataArray,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function compileInterestSuggestions$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          limit = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 100;\n\n          if (keywords.length > 200) {\n            dataArray = splitArray(keywords, 200);\n            getInterestSuggestions(token);\n          }\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var getProducts = function getProducts(shopName) {\n  var url, params, res;\n  return _regeneratorRuntime.async(function getProducts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = endpoints.GET_PRODUCTS(shopName);\n          params = {\n            limit: 10\n          };\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            params: params\n          }));\n\n        case 4:\n          res = _context5.sent;\n          console.log(res.data);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/code/ben/getch/frontend/api/api.js"],"names":["axios","endpoints","splitArray","fbAuthentication","token","id","url","FB_AUTH","params","get","res","data","searchInterest","keyword","limit","FB_INTEREST_SEARCH","q","type","access_token","getInterestSuggestions","keywords","interest_list","compileInterestSuggestions","length","dataArray","getProducts","shopName","GET_PRODUCTS","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport endpoints from './endpoints'\nimport {splitArray} from '../utils/search'\n\nexport const fbAuthentication = async (token, id) => {\n    const url = endpoints.FB_AUTH\n    const params = {\n        token,\n        id\n    }\n\n    const res = await axios.get(url, {\n        params\n    })\n\n    return res.data\n    \n}\n\nexport const  searchInterest = async (token, keyword, limit = 200) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        q: keyword,\n        type: 'adinterest',\n        access_token: token,\n        limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const getInterestSuggestions = async (token, keywords, limit = 100) => {\n    const url = endpoints.FB_INTEREST_SEARCH(2.11)\n    const params = {\n        interest_list : keywords,\n        type: 'adinterestsuggestion',\n        access_token: token,\n        limit: limit\n    }\n    const res = await axios.get(url, {\n        params\n    })\n    return res.data\n}\n\nexport const compileInterestSuggestions = async (token, keywords, limit = 100) => {\n    if(keywords.length > 200){\n        const dataArray = splitArray(keywords, 200)\n        \n        getInterestSuggestions(token,)\n    }\n}\n\nexport const getProducts = async (shopName) => {\n    const url = endpoints.GET_PRODUCTS(shopName)\n    const params = {\n        limit: 10\n    }\n   const res = await axios.get(url, {\n        params\n    })\n\n    console.log(res.data)\n}"]},"metadata":{},"sourceType":"module"}