{"ast":null,"code":"import \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\n\nvar _this = this,\n    _jsxFileName = \"/home/benkissi/projects/getch/getch-frontend-2.0/utils/table.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport var tableColumns = [{\n  title: \"Interest\",\n  width: 70,\n  dataIndex: \"name\",\n  key: \"name\",\n  sorter: function sorter(a, b) {\n    return a.name.length - b.name.length;\n  }\n}, {\n  title: \"Audience\",\n  width: 80,\n  dataIndex: \"audience_size\",\n  key: \"audience\",\n  sorter: function sorter(a, b) {\n    return a.name.length - b.name.length;\n  }\n}, {\n  title: \"Topic\",\n  dataIndex: \"topic\",\n  width: 100,\n  key: \"topic\"\n}, {\n  title: \"Path\",\n  dataIndex: \"path\",\n  key: \"path\",\n  width: 60,\n  render: function render(tags) {\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, tags ? tags.map(function (tag, index) {\n      return __jsx(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, __jsx(_Tag, {\n        color: \"magenta\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, tag.toUpperCase()));\n    }) : \"\");\n  }\n}, {\n  title: \"Relevance Score\",\n  dataIndex: \"relevance\",\n  width: 100,\n  key: \"relevance\",\n  sorter: function sorter(a, b) {\n    return a - b;\n  }\n}, {\n  title: \"Links\",\n  dataIndex: \"links\",\n  width: 100,\n  key: \"links\",\n  render: function render(tags) {\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, tags ? tags.map(function (tag, index) {\n      return __jsx(\"a\", {\n        key: index,\n        href: tag,\n        target: \"_blank\",\n        style: {\n          display: \"inline\",\n          cursor: \"pointer\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        src: \"/images/fbIcon.svg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }));\n    }) : \"\");\n  }\n}];\nexport var performanceColumns = [{\n  title: \"Interest\",\n  width: 70,\n  dataIndex: \"name\",\n  key: \"name\",\n  sorter: function sorter(a, b) {\n    return a.name.length - b.name.length;\n  }\n}, {\n  title: \"CPC\",\n  width: 70,\n  dataIndex: \"cpc\",\n  key: \"cpc\",\n  sorter: function sorter(a, b) {\n    return a - b;\n  }\n}, {\n  title: \"Clicks\",\n  width: 70,\n  dataIndex: \"clicks\",\n  key: \"clicks\",\n  sorter: function sorter(a, b) {\n    return a - b;\n  }\n}, {\n  title: \"Spend\",\n  width: 70,\n  dataIndex: \"spend\",\n  key: \"spend\",\n  sorter: function sorter(a, b) {\n    return a - b;\n  }\n}, {\n  title: \"Conversions\",\n  width: 70,\n  dataIndex: \"convertions\",\n  key: \"convertions\",\n  sorter: function sorter(a, b) {\n    return a - b;\n  }\n}];\nexport var chartData = [{\n  name: \"Nike\",\n  type: \"Spend\",\n  value: 38\n}, {\n  name: \"Adidas\",\n  type: \"Spend\",\n  value: 52\n}, {\n  name: \"Shoe\",\n  type: \"Spend\",\n  value: 61\n}, {\n  name: \"Sandals\",\n  type: \"Spend\",\n  value: 145\n}, {\n  name: \"Slippers\",\n  type: \"Spend\",\n  value: 48\n}, {\n  name: \"Shorts\",\n  type: \"Spend\",\n  value: 38\n}];","map":{"version":3,"sources":["/home/benkissi/projects/getch/getch-frontend-2.0/utils/table.js"],"names":["tableColumns","title","width","dataIndex","key","sorter","a","b","name","length","render","tags","map","tag","index","display","toUpperCase","cursor","performanceColumns","chartData","type","value"],"mappings":"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","sourcesContent":["import { Tag } from \"antd\";\nexport const tableColumns = [\n  {\n    title: \"Interest\",\n    width: 70,\n    dataIndex: \"name\",\n    key: \"name\",\n    sorter: (a, b) => a.name.length - b.name.length,\n  },\n  {\n    title: \"Audience\",\n    width: 80,\n    dataIndex: \"audience_size\",\n    key: \"audience\",\n    sorter: (a, b) => a.name.length - b.name.length,\n  },\n  {\n    title: \"Topic\",\n    dataIndex: \"topic\",\n    width: 100,\n    key: \"topic\",\n  },\n  {\n    title: \"Path\",\n    dataIndex: \"path\",\n    key: \"path\",\n    width: 60,\n    render: (tags) => (\n      <span>\n        {tags\n          ? tags.map((tag, index) => {\n              return (\n                <div style={{ display: \"inline\" }} key={index}>\n                  <Tag color=\"magenta\">{tag.toUpperCase()}</Tag>\n                </div>\n              );\n            })\n          : \"\"}\n      </span>\n    ),\n  },\n  {\n    title: \"Relevance Score\",\n    dataIndex: \"relevance\",\n    width: 100,\n    key: \"relevance\",\n    sorter: (a, b) => a - b,\n  },\n  {\n    title: \"Links\",\n    dataIndex: \"links\",\n    width: 100,\n    key: \"links\",\n    render: (tags) => (\n      <span>\n        {tags\n          ? tags.map((tag, index) => {\n              return (\n                <a\n                  key={index}\n                  href={tag}\n                  target=\"_blank\"\n                  style={{ display: \"inline\", cursor: \"pointer\" }}\n                >\n                  <img src=\"/images/fbIcon.svg\" />\n                  {/* <Tag color=\"gold\">{tag}</Tag> */}\n                </a>\n              );\n            })\n          : \"\"}\n      </span>\n    ),\n  },\n];\n\nexport const performanceColumns = [\n  {\n    title: \"Interest\",\n    width: 70,\n    dataIndex: \"name\",\n    key: \"name\",\n    sorter: (a, b) => a.name.length - b.name.length,\n  },\n  {\n    title: \"CPC\",\n    width: 70,\n    dataIndex: \"cpc\",\n    key: \"cpc\",\n    sorter: (a, b) => a - b,\n  },\n  {\n    title: \"Clicks\",\n    width: 70,\n    dataIndex: \"clicks\",\n    key: \"clicks\",\n    sorter: (a, b) => a - b,\n  },\n  {\n    title: \"Spend\",\n    width: 70,\n    dataIndex: \"spend\",\n    key: \"spend\",\n    sorter: (a, b) => a - b,\n  },\n  {\n    title: \"Conversions\",\n    width: 70,\n    dataIndex: \"convertions\",\n    key: \"convertions\",\n    sorter: (a, b) => a - b,\n  },\n];\n\nexport const chartData = [\n  {\n    name: \"Nike\",\n    type: \"Spend\",\n    value: 38,\n  },\n  {\n    name: \"Adidas\",\n    type: \"Spend\",\n    value: 52,\n  },\n  {\n    name: \"Shoe\",\n    type: \"Spend\",\n    value: 61,\n  },\n  {\n    name: \"Sandals\",\n    type: \"Spend\",\n    value: 145,\n  },\n  {\n    name: \"Slippers\",\n    type: \"Spend\",\n    value: 48,\n  },\n  {\n    name: \"Shorts\",\n    type: \"Spend\",\n    value: 38,\n  },\n];\n"]},"metadata":{},"sourceType":"module"}