{"version":3,"file":"static/webpack/static/development/pages/index.js.5aee5ce5c2597227445e.hot-update.js","sources":["webpack:///./components/dashboardLayout.js"],"sourcesContent":["import { Row, Col } from 'antd';\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { Button  } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { authFacebook } from \"../redux/user/user-actions\";\nimport SideBar from \"../components/sideBar\";\nimport Onboarding from \"../components/onboarding\"\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/scss/main.scss\";\n\nimport Header from \"./header\";\n\n\nconst DashboardLayout = props => {\n    const {\n        authFb,\n        user,\n        fbToken,\n        userError,\n        searchError\n      } = props;\n      const router = useRouter();\n\n      useEffect(() => {\n        if(searchError || userError){\n            toast.error(`There was an error.`, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n              });\n        }\n      }, [userError, searchError])\n\n      useEffect(() => {\n        if(user == null){\n            router.push(\"/signup\");\n        }\n      }, [props.user])\n\n    const faceAuthStart = () => {\n        console.log(\"#### FB auth start\");\n    };\n\n    const responseFacebook = async res => {\n        const { accessToken, userID } = res;\n        console.log('fb',res)\n        authFb(accessToken, user.id, userID);\n    };\n\n    const actions = [\n        <Button style={{background: \"#f86326\", border: \"none\", color: \"white\"}}>Get life time access</Button>,\n    ]\n return (\n     <div className=\"layout\">\n         <Row>\n            <Col style={{position: 'relative', height: '100vh', width: \"16.66666667%\"}} span={4}><SideBar/></Col>\n            <Col style={{padding: '0 20px 0 20px', minHeight: '100vh'}} span={20} className=\"child-container\">\n            <div className=\"header\">\n                <Header actions={actions} />\n            </div>\n            <div className=\"children\">\n                {props.children}\n            </div>\n            {\n                !fbToken && user ?\n                <Onboarding/>: \"\"\n            }\n                \n            <footer>\n                <div className=\"footer\">\n                    <p className=\"footer-item\">&copy; 2010 - {new Date().getFullYear()}, Getch.</p>\n                </div>\n            </footer>\n            </Col>\n         </Row>\n\n        <style jsx>{`\n            .layout {\n                position: relative;\n                min-height: 100vh;\n            }\n\n            .layout-body {\n                position: relative;\n            }\n\n            .child-container {\n                display: flex;\n            }\n\n            .children {\n                flex-grow: 1;\n            }\n\n            .header {\n                position: fixed;\n                top: 0;\n                width: 81%;\n                background-color: white;\n                z-index: 100;\n            }\n\n            footer {\n                margin-top: 100px;\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                background: white;\n                height: 50px;\n                margin-top: 50px;\n            }\n\n            .footer {\n                position: fixed;\n                bottom: 0;\n                width: inherit;\n                background-color: white;\n                color: black;\n                text-align: center;\n              }\n\n        `}</style>\n     </div>\n )\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.currentUser,\n    fbToken: state.user.fbToken,\n    userError: state.user.error,\n    searchError: state.search.error\n  });\n\n  const mapDispatchToProps = dispatch => ({\n    authFb: (token, id, fbId) => dispatch(authFacebook({ token, id, fbId}))\n  });\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardLayout)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAuEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}